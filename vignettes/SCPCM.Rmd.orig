---
title: "Spatially Convergent Partial Cross Mapping (SCPCM)"
author: "Wenbo Lv"
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{SCPCM}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "##",
  fig.path = "man/figures/scpcm/"
)
```

## Model principles


## Usage examples

### An example of spatial lattice data

Load the `spEDM` package and its county-level population density data:

```{r load_lattice_data}
library(spEDM)

popd_nb = spdep::read.gal(system.file("case/popd_nb.gal",package = "spEDM"))
popd = readr::read_csv(system.file("case/popd.csv",package = "spEDM"))
popd_sf = sf::st_as_sf(popd, coords = c("x","y"), crs = 4326)
popd_sf
```

Examine the causation between elevation and population density, controlling for precipitation and temperature.

```{r scpcm_lattice}
startTime = Sys.time()
popd_pretem = scpcm(data = popd_sf,
                    cause = "elev",
                    effect = "popd",
                    conds = c("pre","tem"),
                    libsizes = seq(100, 2800, by = 200),
                    E = 2,
                    k = 6,
                    nb = popd_nb)
endTime = Sys.time()
print(difftime(endTime,startTime, units ="mins"))
popd_pretem
```

### An example of spatial grid data

Load the `spEDM` package and its farmland NPP data:

```{r load_grid_data}
library(spEDM)

npp = terra::rast(system.file("case/npp.tif", package = "spEDM"))
npp

# To save the computation time, we will aggregate the data by 3 times
npp = terra::aggregate(npp, fact = 3, na.rm = TRUE)
npp

# Inspect NA values
terra::global(npp,"isNA")
terra::ncell(npp)
nnamat = terra::as.matrix(npp[[1]], wide = TRUE)
nnaindice = which(!is.na(nnamat), arr.ind = TRUE)
dim(nnaindice)
```

Investigating the causation between elevation and NPP, with precipitation and temperature as control variables:

```{r scpcm_grid}
startTime = Sys.time()
npp_pretem = scpcm(data = npp,
                   cause = "elev",
                   effect = "npp",
                   conds = c("pre","tem"),
                   libsizes = as.matrix(expand.grid(seq(10,130,20),
                                                    seq(10,160,20))),
                   E = 2,
                   k = 8,
                   lib = nnaindice,
                   pred = nnaindice)
endTime = Sys.time()
print(difftime(endTime,startTime, units ="mins"))
npp_pretem
```
