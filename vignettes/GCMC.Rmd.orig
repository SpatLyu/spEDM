---
title: "Geographical Cross Mapping Cardinality (GCMC)"
author: "Wenbo Lv"
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{GCMC}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "##",
  fig.path = "man/figures/gcmc/"
)
```

## 1.1 Install the `spEDM` package

Install the stable version from [CRAN](https://CRAN.R-project.org/package=spEDM) with:

```r
install.packages("spEDM", dep = TRUE)
```

Alternatively, you can install the development version from [R-universe](https://stscl.r-universe.dev/spEDM) with:

``` r
install.packages("spEDM",
                 repos = c("https://stscl.r-universe.dev",
                           "https://cloud.r-project.org"),
                 dep = TRUE)
```

## 1.2 An example of spatial lattice data

Load the `spEDM` package and its county-level population density data:

```{r load_lattice_data}
library(spEDM)

popd_nb = spdep::read.gal(system.file("case/popdensity_nb.gal",package = "spEDM"))
popd_nb

popdensity = readr::read_csv(system.file("case/popdensity.csv",package = "spEDM"))
popdensity

popd_sf = sf::st_as_sf(popdensity, coords = c("x","y"), crs = 4326)
popd_sf
```

Run GCMC:

```{r case_lattice}
# temperature and population density
g1 = gcmc(data = popd_sf, cause = "tem", effect = "popdensity",
          E = c(2,5), k = 160, nb = popd_nb, trend.rm = TRUE)
g1

# elevation and population density
g2 = gcmc(data = popd_sf, cause = "elev", effect = "popdensity",
          E = c(1,5), k = 150, nb = popd_nb, trend.rm = TRUE)
g2

# elevation and temperature
g3 = gcmc(data = popd_sf, cause = "elev", effect = "tem",
          E = c(1,2), k = 150, nb = popd_nb, trend.rm = TRUE)
g3
```

## 1.3 An example of spatial grid data

Load the `spEDM` package and its farmland NPP data:

```{r load_grid_data}
library(spEDM)

npp = terra::rast(system.file("case/npp.tif", package = "spEDM"))

# To save the computation time, we will aggregate the data by 3 times and select 1500 non-NA pixels to predict:
npp = terra::aggregate(npp, fact = 3, na.rm = TRUE)
terra::global(npp,"isNA")
terra::ncell(npp)

nnamat = terra::as.matrix(npp[[1]], wide = TRUE)
nnaindice = which(!is.na(nnamat), arr.ind = TRUE)
dim(nnaindice)

set.seed(2025)
indices = sample(nrow(nnaindice), size = 1500, replace = FALSE)
libindice = nnaindice[-indices,]
predindice = nnaindice[indices,]
```

Run GCMC:

```{r case_grid}
# precipitation and npp
g1 = gcmc(data = npp,cause = "pre",effect = "npp",E = 2,k = 270,
          lib = nnaindice, pred = predindice, trend.rm = TRUE)
g1

# temperature and npp
g2 = gcmc(data = npp,cause = "tem",effect = "npp",E = 2,k = 270,
          lib = nnaindice, pred = predindice, trend.rm = TRUE)
g2

# precipitation and temperature
g3 = gcmc(data = npp,cause = "pre",effect = "tem",E = 2,k = 270,
          lib = nnaindice, pred = predindice, trend.rm = TRUE)
g3
```
