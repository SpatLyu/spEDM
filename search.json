[{"path":"https://stscl.github.io/spEDM/articles/GCCM.html","id":"model-principles","dir":"Articles","previous_headings":"","what":"Model principles","title":"Geographical Convergent Cross Mapping (GCCM)","text":"Let \\(Y = \\{y_i\\}\\) \\(X = \\{x_i\\}\\) two spatial cross sectional variable, \\(= 1, 2, \\dots, n\\) denotes spatial units (e.g., regions grid cells), shadow manifolds \\(X\\) can constructed using different spatial lag values spatial units: \\[ M_{x} = \\begin{bmatrix} S_{(1)}(x_1) & S_{(1 + \\tau)}(x_1) & \\cdots & S_{(1+(E-1)\\tau)}(x_1) \\\\ S_{(1)}(x_2) & S_{(1 + \\tau)}(x_2) & \\cdots & S_{(1+(E-1)\\tau)}(x_2) \\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ S_{(1)}(x_n) & S_{(1 + \\tau)}(x_n) & \\cdots & S_{(1+(E-1)\\tau)}(x_n) \\end{bmatrix} \\] , \\(S_{(j)}(x_i)\\) denotes \\(j\\) th-order spatial lag value spatial unit \\(\\), $$ step size spatial lag order, \\(E\\) embedding dimension \\(M_{x}\\) corresponds shadow manifolds \\(X\\). reconstructed shadow manifolds \\(M_{x}\\), state Y can predicted state X \\[ \\hat{Y}_s \\mid M_x = \\sum\\limits_{=1}^k \\left(\\omega_{si}Y_{si} \\mid M_x \\right) \\] \\(s\\) represents spatial unit value \\(Y\\) needs predicted, \\(\\hat{Y}_s\\) prediction result, \\(k\\) number nearest neighbors used prediction, \\(si\\) spatial unit used prediction, \\(Y_{si}\\) observation value \\(Y\\) \\(si\\). \\(\\omega_{si}\\) corresponding weight defined : \\[ \\omega_{si} \\mid M_x = \\frac{weight \\left(\\psi\\left(M_x,s_i\\right),\\psi\\left(M_x,s\\right)\\right)}{\\sum_{=1}^{L+1}weight \\left(\\psi\\left(M_x,s_i\\right),\\psi\\left(M_x,s\\right)\\right)} \\] \\(\\psi(M_x, s_i)\\) state vector spatial unit \\(s_i\\) shadow manifold $ M_x$, \\(weight (\\ast, \\ast)\\) weight function two states shadow manifold, defined : \\[ weight \\left(\\psi\\left(M_x,s_i\\right),\\psi\\left(M_x,s\\right)\\right) = \\exp \\left(- \\frac{dis \\left(\\psi\\left(M_x,s_i\\right),\\psi\\left(M_x,s\\right)\\right)}{dis \\left(\\psi\\left(M_x,s_1\\right),\\psi\\left(M_x,s\\right)\\right)} \\right) \\] \\(\\exp\\) exponential function \\(dis \\left(\\ast,\\ast\\right)\\) represents distance function two states shadow manifold defined : \\[ dis \\left( \\psi(M_x, s_i), \\psi(M_x, s) \\right) = \\frac{1}{E} \\sum_{m=1}^{E} \\left| \\psi_m(M_x, s_i) - \\psi_m(M_x, s) \\right| \\] \\(dis \\left( \\psi(M_x, s_i), \\psi(M_x, s) \\right)\\) denotes average absolute difference corresponding elements two state vectors shadow manifold \\(M_x\\), \\(E\\) embedding dimension, \\(\\psi_m(M_x, s_i)\\) \\(m\\)-th element state vector \\(\\psi(M_x, s_i)\\). skill cross-mapping prediction \\(\\rho\\) measured Pearson correlation coefficient true observations corresponding predictions, confidence interval \\(\\rho\\) can estimated based \\(z\\)-statistics normal distribution: \\[ \\rho = \\frac{Cov\\left(Y,\\hat{Y}\\mid M_x\\right)}{\\sqrt{Var\\left(Y\\right) Var\\left(\\hat{Y}\\mid M_x\\right)}} \\] \\[ t = \\rho \\sqrt{\\frac{n-2}{1-\\rho^2}} \\] \\(n\\) number observations predicted, \\[ z = \\frac{1}{2} \\ln \\left(\\frac{1+\\rho}{1-\\rho}\\right) \\] prediction skill \\(\\rho\\) varies setting different sizes libraries, means quantity observations used reconstruction shadow manifold. can use convergence \\(\\rho\\) infer causal associations. GCCM, convergence means \\(\\rho\\) increases size libraries statistically significant library becomes largest. \\[ \\rho_{x \\y} = \\lim_{L \\\\infty} cor \\left( Y,\\hat{Y}\\mid M_x \\right) \\] \\(\\rho_{x \\y}\\) correlation convergence, used measure causation effect \\(Y\\) \\(X\\), despite notation suggesting reverse direction.","code":""},{"path":[]},{"path":"https://stscl.github.io/spEDM/articles/GCCM.html","id":"an-example-of-spatial-lattice-data","dir":"Articles","previous_headings":"Usage examples","what":"An example of spatial lattice data","title":"Geographical Convergent Cross Mapping (GCCM)","text":"Load spEDM package county-level population density data: Run GCCM: Visualize result:","code":"library(spEDM)  popd_nb = spdep::read.gal(system.file(\"case/popd_nb.gal\",package = \"spEDM\")) ## Warning in spdep::read.gal(system.file(\"case/popd_nb.gal\", package = \"spEDM\")): ## neighbour object has 4 sub-graphs popd = readr::read_csv(system.file(\"case/popd.csv\",package = \"spEDM\")) ## Rows: 2806 Columns: 7 ## ── Column specification ──────────────────────────────────────────────────────────────────────────── ## Delimiter: \",\" ## dbl (7): x, y, popd, elev, tem, pre, slope ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. popd_sf = sf::st_as_sf(popd, coords = c(\"x\",\"y\"), crs = 4326) popd_sf ## Simple feature collection with 2806 features and 5 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 74.9055 ymin: 18.2698 xmax: 134.269 ymax: 52.9346 ## Geodetic CRS:  WGS 84 ## # A tibble: 2,806 × 6 ##     popd  elev   tem   pre slope          geometry ##  * <dbl> <dbl> <dbl> <dbl> <dbl>       <POINT [°]> ##  1  780.     8  17.4 1528. 0.452 (116.912 30.4879) ##  2  395.    48  17.2 1487. 0.842 (116.755 30.5877) ##  3  261.    49  16.0 1456. 3.56  (116.541 30.7548) ##  4  258.    23  17.4 1555. 0.932  (116.241 30.104) ##  5  211.   101  16.3 1494. 3.34   (116.173 30.495) ##  6  386.    10  16.6 1382. 1.65  (116.935 30.9839) ##  7  350.    23  17.5 1569. 0.346 (116.677 30.2412) ##  8  470.    22  17.1 1493. 1.88  (117.066 30.6514) ##  9 1226.    11  17.4 1526. 0.208 (117.171 30.5558) ## 10  137.   598  13.9 1458. 5.92  (116.208 30.8983) ## # ℹ 2,796 more rows startTime = Sys.time() pd_res = gccm(data = popd_sf,               cause = \"pre\",               effect = \"popd\",               libsizes = seq(100, 2800, by = 200),               E = c(2,5),               k = 6,               nb = popd_nb,               progressbar = FALSE) endTime = Sys.time() print(difftime(endTime,startTime, units =\"mins\")) ## Time difference of 3.026651 mins pd_res ##    libsizes pre->popd  popd->pre ## 1       100 0.1712430 0.03310752 ## 2       300 0.2734076 0.06281068 ## 3       500 0.3373114 0.08695222 ## 4       700 0.4129516 0.10770835 ## 5       900 0.4659603 0.12410538 ## 6      1100 0.5035359 0.13743351 ## 7      1300 0.5375355 0.14767426 ## 8      1500 0.5659653 0.15726216 ## 9      1700 0.5986755 0.16723965 ## 10     1900 0.6305533 0.17562842 ## 11     2100 0.6614280 0.18275701 ## 12     2300 0.6901668 0.18874968 ## 13     2500 0.7178725 0.19471162 ## 14     2700 0.7433577 0.20087427 plot(pd_res,xlimits = c(0, 2800)) +   ggplot2::theme(legend.justification = c(0.85,1))"},{"path":"https://stscl.github.io/spEDM/articles/GCCM.html","id":"an-example-of-spatial-grid-data","dir":"Articles","previous_headings":"Usage examples","what":"An example of spatial grid data","title":"Geographical Convergent Cross Mapping (GCCM)","text":"Load spEDM package farmland NPP data: Run GCCM: Visualize result:","code":"library(spEDM)  npp = terra::rast(system.file(\"case/npp.tif\", package = \"spEDM\")) npp ## class       : SpatRaster  ## dimensions  : 404, 483, 5  (nrow, ncol, nlyr) ## resolution  : 10000, 10000  (x, y) ## extent      : -2625763, 2204237, 1877078, 5917078  (xmin, xmax, ymin, ymax) ## coord. ref. : CGCS2000_Albers  ## source      : npp.tif  ## names       :      npp,        pre,      tem,      elev,         hfp  ## min values  :   164.00,   384.3409, -47.8194, -122.2004,  0.03390418  ## max values  : 16606.33, 23878.3555, 263.6938, 5350.4902, 44.90312195  # To save the computation time, we will aggregate the data by 3 times npp = terra::aggregate(npp, fact = 3, na.rm = TRUE) npp ## class       : SpatRaster  ## dimensions  : 135, 161, 5  (nrow, ncol, nlyr) ## resolution  : 30000, 30000  (x, y) ## extent      : -2625763, 2204237, 1867078, 5917078  (xmin, xmax, ymin, ymax) ## coord. ref. : CGCS2000_Albers  ## source(s)   : memory ## names       :      npp,        pre,      tem,      elev,         hfp  ## min values  :   187.50,   390.3351, -47.8194, -110.1494,  0.04434316  ## max values  : 15381.89, 23734.5330, 262.8576, 5217.6431, 42.68803711  # Inspect NA values terra::global(npp,\"isNA\") ##       isNA ## npp  14815 ## pre  14766 ## tem  14766 ## elev 14760 ## hfp  14972 terra::ncell(npp) ## [1] 21735 nnamat = terra::as.matrix(npp[[1]], wide = TRUE) nnaindice = which(!is.na(nnamat), arr.ind = TRUE) dim(nnaindice) ## [1] 6920    2  # Select 1500 non-NA pixels to predict: set.seed(2025) indices = sample(nrow(nnaindice), size = 1500, replace = FALSE) libindice = nnaindice[-indices,] predindice = nnaindice[indices,] startTime = Sys.time() npp_res = gccm(data = npp,                cause = \"pre\",                effect = \"npp\",                libsizes = matrix(rep(seq(10,130,20),2),ncol = 2),                E = c(2,10),                k = 8,                lib = nnaindice,                pred = predindice,                progressbar = FALSE) endTime = Sys.time() print(difftime(endTime,startTime, units =\"mins\")) ## Time difference of 5.069043 mins npp_res ##   libsizes  pre->npp  npp->pre ## 1       10 0.1295281 0.1013898 ## 2       30 0.2607783 0.2286559 ## 3       50 0.3788341 0.2956426 ## 4       70 0.4961658 0.3394660 ## 5       90 0.5972341 0.3376894 ## 6      110 0.7358447 0.3412305 ## 7      130 0.8386849 0.3663077 plot(npp_res,xlimits = c(5, 135),ylimits = c(0.05,1)) +   ggplot2::theme(legend.justification = c(0.25,1))"},{"path":"https://stscl.github.io/spEDM/articles/GCMC.html","id":"research-notice","dir":"Articles","previous_headings":"","what":"📌 Research Notice","title":"Geographical Cross Mapping Cardinality (GCMC)","text":"GCMC algorithm provided package research method currently peer review International Journal Geographical Information Science (IJGIS) . provide early access implementation detailed vignette reproducibility. Users note methodological details may evolve final publication.","code":""},{"path":"https://stscl.github.io/spEDM/articles/GCMC.html","id":"model-principles","dir":"Articles","previous_headings":"","what":"Model principles","title":"Geographical Cross Mapping Cardinality (GCMC)","text":"measure causal associations spatial cross-sectional data, GCMC (Geographical Convergent Cross Mapping) employs three-stage procedure: Stage one involves reconstructing state space. Given two spatial variables, \\(x\\) \\(y\\), step requires determining suitable embedding dimension \\(E\\) spatial lag interval \\(\\tau\\). spatial location (unit) \\(\\), attribute values spatial neighbors lag orders \\(1, 1+\\tau, \\dots, 1+(E-1)\\tau\\) collected. values summarized—commonly using mean—construct embedding vector unit. Aggregating vectors across spatial units results reconstructed state spaces, denoted \\(E_x\\) \\(E_y\\). Stage two constructs Intersectional Cardinality (IC) curve, serves evaluate causal strength. measure whether \\(y\\) causally affects \\(x\\), one computes, \\(k\\), overlap \\(k\\) nearest neighbors \\(E_y\\) corresponding “projected” neighbors traced \\(E_x\\). Specifically, point \\(E_x\\), \\(k\\) nearest neighbors identified, mapped neighbors \\(E_y\\) compared direct neighbors \\(E_y\\). IC curve formed recording number shared neighbors across range \\(k = 1, 2, \\dots, n\\). process can also reversed test causality \\(x\\) \\(y\\). Stage three involves quantifying validating strength causal associations. area IC curve (AUC) provides numerical measure causal strength. determine whether observed causal strength statistically significant, hypothesis test performed: null assumes causality, alternative assumes presence. DeLong palcements method applied evaluate difference AUCs hypotheses. also yields confidence intervals, supporting robust causal inference.","code":""},{"path":[]},{"path":"https://stscl.github.io/spEDM/articles/GCMC.html","id":"an-example-of-spatial-lattice-data","dir":"Articles","previous_headings":"Usage examples","what":"An example of spatial lattice data","title":"Geographical Cross Mapping Cardinality (GCMC)","text":"Load spEDM package county-level population density data: Run GCMC: define two functions process results plot causal association matrix. Organize results long table: Visualize result:","code":"library(spEDM)  popd_nb = spdep::read.gal(system.file(\"case/popd_nb.gal\",package = \"spEDM\")) ## Warning in spdep::read.gal(system.file(\"case/popd_nb.gal\", package = \"spEDM\")): ## neighbour object has 4 sub-graphs popd = readr::read_csv(system.file(\"case/popd.csv\",package = \"spEDM\")) ## Rows: 2806 Columns: 7 ## ── Column specification ──────────────────────────────────────────────────────────────────────────── ## Delimiter: \",\" ## dbl (7): x, y, popd, elev, tem, pre, slope ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. popd_sf = sf::st_as_sf(popd, coords = c(\"x\",\"y\"), crs = 4326) popd_sf ## Simple feature collection with 2806 features and 5 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 74.9055 ymin: 18.2698 xmax: 134.269 ymax: 52.9346 ## Geodetic CRS:  WGS 84 ## # A tibble: 2,806 × 6 ##     popd  elev   tem   pre slope          geometry ##  * <dbl> <dbl> <dbl> <dbl> <dbl>       <POINT [°]> ##  1  780.     8  17.4 1528. 0.452 (116.912 30.4879) ##  2  395.    48  17.2 1487. 0.842 (116.755 30.5877) ##  3  261.    49  16.0 1456. 3.56  (116.541 30.7548) ##  4  258.    23  17.4 1555. 0.932  (116.241 30.104) ##  5  211.   101  16.3 1494. 3.34   (116.173 30.495) ##  6  386.    10  16.6 1382. 1.65  (116.935 30.9839) ##  7  350.    23  17.5 1569. 0.346 (116.677 30.2412) ##  8  470.    22  17.1 1493. 1.88  (117.066 30.6514) ##  9 1226.    11  17.4 1526. 0.208 (117.171 30.5558) ## 10  137.   598  13.9 1458. 5.92  (116.208 30.8983) ## # ℹ 2,796 more rows # temperature and population density g1 = gcmc(data = popd_sf, cause = \"tem\", effect = \"popd\", E = c(2,5),           k = 210, nb = popd_nb, trend.rm = TRUE, progressbar = FALSE) g1 ##   neighbors tem->popd popd->tem ## 1       210 0.7538776  0.197619  # elevation and population density g2 = gcmc(data = popd_sf, cause = \"elev\", effect = \"popd\", E = c(1,5),           k = 210, nb = popd_nb, trend.rm = TRUE, progressbar = FALSE) g2 ##   neighbors elev->popd popd->elev ## 1       210  0.8355329  0.2065986  # elevation and temperature g3 = gcmc(data = popd_sf, cause = \"elev\", effect = \"tem\", E = c(1,2),           k = 210, nb = popd_nb, trend.rm = TRUE, progressbar = FALSE) g3 # When there are insignificant results, we set spEDM to suppress output. This is not a bug. ## [1] neighbors elev->tem tem->elev ## <0 rows> (or 0-length row.names) g3$xmap ##   neighbors x_xmap_y_mean x_xmap_y_sig x_xmap_y_upper x_xmap_y_lower ## 1       210     0.5094785    0.7677155      0.5723751      0.4465818 ##   y_xmap_x_mean y_xmap_x_sig y_xmap_x_upper y_xmap_x_lower ## 1     0.6279365 4.342088e-05      0.6892676      0.5666054 .process_xmap_result = \\(g){   tempdf = g$xmap   tempdf$x = g$varname[1]   tempdf$y = g$varname[2]   tempdf = dplyr::select(tempdf, 1, x, y,                          x_xmap_y_mean,x_xmap_y_sig,                          y_xmap_x_mean,y_xmap_x_sig,                          dplyr::everything())    g1 = tempdf |>     dplyr::select(x,y,y_xmap_x_mean,y_xmap_x_sig)|>     purrr::set_names(c(\"cause\",\"effect\",\"ca\",\"sig\"))   g2 = tempdf |>     dplyr::select(y,x,x_xmap_y_mean,x_xmap_y_sig) |>     purrr::set_names(c(\"cause\",\"effect\",\"ca\",\"sig\"))    return(rbind(g1,g2)) }  plot_ca_matrix = \\(.tbf,legend_title = \"Causal Association\"){   .tbf = .tbf |>     dplyr::mutate(sig_marker = dplyr::case_when(       sig < 0.001 ~ \"***\",       sig < 0.01  ~ \"**\",       sig < 0.05  ~ \"*\",       .default =  \"\"     )) |>     dplyr::mutate(sig_marker = paste0(round(ca,3),sig_marker))    fig = ggplot2::ggplot(data = .tbf,                         ggplot2::aes(x = effect, y = cause)) +     ggplot2::geom_tile(color = \"black\", ggplot2::aes(fill = ca)) +     ggplot2::geom_abline(slope = 1, intercept = 0, color = \"black\", linewidth = 0.25) +     ggplot2::geom_text(ggplot2::aes(label = sig_marker), color = \"black\", family = \"serif\") +     ggplot2::labs(x = \"Effect\", y = \"Cause\", fill = legend_title) +     ggplot2::scale_x_discrete(expand = c(0, 0)) +     ggplot2::scale_y_discrete(expand = c(0, 0)) +     ggplot2::scale_fill_gradient(low = \"#9bbbb8\", high = \"#256c68\") +     ggplot2::coord_equal() +     ggplot2::theme_void() +     ggplot2::theme(       axis.text.x = ggplot2::element_text(angle = 0, family = \"serif\"),       axis.text.y = ggplot2::element_text(color = \"black\", family = \"serif\"),       axis.title.y = ggplot2::element_text(angle = 90, family = \"serif\"),       axis.title.x = ggplot2::element_text(color = \"black\", family = \"serif\",                                            margin = ggplot2::margin(t = 5.5, unit = \"pt\")),       legend.text = ggplot2::element_text(family = \"serif\"),       legend.title = ggplot2::element_text(family = \"serif\"),       legend.background = ggplot2::element_rect(fill = NA, color = NA),       legend.direction = \"horizontal\",       legend.position = \"bottom\",       legend.margin = ggplot2::margin(t = 1, r = 0, b = 0, l = 0, unit = \"pt\"),       legend.key.width = ggplot2::unit(20, \"pt\"),       panel.grid = ggplot2::element_blank(),       panel.border = ggplot2::element_rect(color = \"black\", fill = NA)     )   return(fig) } res1 = list(g1,g2,g3) |>   purrr::map(.process_xmap_result) |>   purrr::list_rbind() res1 ##   cause effect        ca          sig ## 1   tem   popd 0.7538776 1.110975e-19 ## 2  popd    tem 0.1976190 4.543832e-35 ## 3  elev   popd 0.8355329 9.586182e-44 ## 4  popd   elev 0.2065986 6.101271e-32 ## 5  elev    tem 0.6279365 4.342088e-05 ## 6   tem   elev 0.5094785 7.677155e-01 plot_ca_matrix(res1)"},{"path":"https://stscl.github.io/spEDM/articles/GCMC.html","id":"an-example-of-spatial-grid-data","dir":"Articles","previous_headings":"Usage examples","what":"An example of spatial grid data","title":"Geographical Cross Mapping Cardinality (GCMC)","text":"Load spEDM package farmland NPP data: Run GCMC: Organize results long table: Visualize result:","code":"library(spEDM)  npp = terra::rast(system.file(\"case/npp.tif\", package = \"spEDM\")) npp ## class       : SpatRaster  ## dimensions  : 404, 483, 5  (nrow, ncol, nlyr) ## resolution  : 10000, 10000  (x, y) ## extent      : -2625763, 2204237, 1877078, 5917078  (xmin, xmax, ymin, ymax) ## coord. ref. : CGCS2000_Albers  ## source      : npp.tif  ## names       :      npp,        pre,      tem,      elev,         hfp  ## min values  :   164.00,   384.3409, -47.8194, -122.2004,  0.03390418  ## max values  : 16606.33, 23878.3555, 263.6938, 5350.4902, 44.90312195  # To save the computation time, we will aggregate the data by 3 times npp = terra::aggregate(npp, fact = 3, na.rm = TRUE) npp ## class       : SpatRaster  ## dimensions  : 135, 161, 5  (nrow, ncol, nlyr) ## resolution  : 30000, 30000  (x, y) ## extent      : -2625763, 2204237, 1867078, 5917078  (xmin, xmax, ymin, ymax) ## coord. ref. : CGCS2000_Albers  ## source(s)   : memory ## names       :      npp,        pre,      tem,      elev,         hfp  ## min values  :   187.50,   390.3351, -47.8194, -110.1494,  0.04434316  ## max values  : 15381.89, 23734.5330, 262.8576, 5217.6431, 42.68803711  # Inspect NA values terra::global(npp,\"isNA\") ##       isNA ## npp  14815 ## pre  14766 ## tem  14766 ## elev 14760 ## hfp  14972 terra::ncell(npp) ## [1] 21735 nnamat = terra::as.matrix(npp[[1]], wide = TRUE) nnaindice = which(!is.na(nnamat), arr.ind = TRUE) dim(nnaindice) ## [1] 6920    2  # Select 1500 non-NA pixels to predict: set.seed(2025) indices = sample(nrow(nnaindice), size = 1500, replace = FALSE) libindice = nnaindice[-indices,] predindice = nnaindice[indices,] # precipitation and npp g1 = gcmc(data = npp, cause = \"pre\", effect = \"npp\", E = 2, k = 270,           lib = predindice, pred = predindice, trend.rm = TRUE, progressbar = FALSE) g1 ## [1] neighbors pre->npp  npp->pre  ## <0 rows> (or 0-length row.names) g1$xmap ##   neighbors x_xmap_y_mean x_xmap_y_sig x_xmap_y_upper x_xmap_y_lower ## 1       270     0.5383539    0.1686404      0.5929617      0.4837461 ##   y_xmap_x_mean y_xmap_x_sig y_xmap_x_upper y_xmap_x_lower ## 1     0.6088477 8.929335e-05      0.6632986      0.5543968  # temperature and npp g2 = gcmc(data = npp, cause = \"tem\", effect = \"npp\", E = 2, k = 270,           lib = predindice, pred = predindice, trend.rm = TRUE, progressbar = FALSE) g2 ##   neighbors  tem->npp  npp->tem ## 1       270 0.6401509 0.6113992  # precipitation and temperature g3 = gcmc(data = npp, cause = \"pre\", effect = \"tem\", E = 2, k = 270,           lib = predindice, pred = predindice, trend.rm = TRUE, progressbar = FALSE) g3 ##   neighbors  pre->tem  tem->pre ## 1       270 0.6800274 0.6381344 res2 = list(g1,g2,g3) |>   purrr::map(.process_xmap_result) |>   purrr::list_rbind() res2 ##   cause effect        ca          sig ## 1   pre    npp 0.6088477 8.929335e-05 ## 2   npp    pre 0.5383539 1.686404e-01 ## 3   tem    npp 0.6401509 2.548677e-07 ## 4   npp    tem 0.6113992 4.810113e-05 ## 5   pre    tem 0.6800274 1.305997e-11 ## 6   tem    pre 0.6381344 3.699711e-07 plot_ca_matrix(res2)"},{"path":"https://stscl.github.io/spEDM/articles/SCT.html","id":"model-principles","dir":"Articles","previous_headings":"","what":"Model principles","title":"Spatial Causality Test (SCT)","text":"Let us begin defining two spatial cross-sectional series \\(\\{x_s\\}_{s \\S}\\) \\(\\{y_s\\}_{s \\S}\\), \\(S\\) represents study area. use: \\[ \\mathcal{X}_W = \\{ W_i x \\mid W_i \\\\mathcal{W}(x, y) \\} \\] \\[ \\mathcal{Y}_W = \\{ W_i y \\mid W_i \\\\mathcal{W}(x, y) \\} \\] denote sets spatial lags \\(x\\) \\(y\\) given weighting matrices \\(\\mathcal{W}(x, y)\\)(set spatial dependence structures \\(x\\) \\(y\\)). say \\(\\{x_s\\}_{s \\S}\\) cause \\(\\{y_s\\}_{s \\S}\\) spatial structures \\(\\mathcal{X}_W\\) \\(\\mathcal{Y}_W\\) \\[ h_{y |\\mathcal{Y}_W}(m) = h_{y | \\mathcal{Y}_W,\\mathcal{X}_W}(m) \\] unilateral non-parametric test can applied assess spatial causality via following null hypothesis: \\[ H_0 : \\{x_s\\}_{s \\S} \\text{ cause } \\{y_s\\}_{s \\S} \\text{ spatial structures } \\mathcal{X}_W \\text{ } \\mathcal{Y}_W, \\] following statistic: \\[ \\hat{\\delta}(\\mathcal{Y}_W, \\mathcal{X}_W) = \\hat{h}_{y |\\mathcal{Y}_W}(m) - \\hat{h}_{y | \\mathcal{Y}_W,\\mathcal{X}_W}(m) \\] \\(\\hat{h}_*(m)\\) estimated conditional symbolic entropy using Shannon’s entropy \\(m-1\\) nearest neighbors. alternative null hypothesis true. \\(\\mathcal{X}_W\\) contain extra information \\(y\\) \\(\\hat{\\delta}(\\mathcal{Y}_W, \\mathcal{X}_W) = 0\\), otherwise, $ (_W, _W) > 0$. \\(h_{y |\\mathcal{Y}_W}(m)\\) measures uncertainty distribution symbols \\(y\\), conditional symbols spatial lag, $ _W$. Moreover, \\(h_{y | \\mathcal{Y}_W,\\mathcal{X}_W}(m)\\) measures uncertainty distribution symbols \\(y\\), conditional symbols spatial lags \\(y\\), \\(\\mathcal{Y}_W\\), \\(x\\), $ _W$. second variable, \\(x\\), indeed causes first one significant decrease entropy, statistic \\(\\hat{\\delta}(\\mathcal{Y}_W, \\mathcal{X}_W)\\) take high positive values. spatial correlation, causation, difference entropies small. statistical significance \\(\\hat{\\delta}(\\mathcal{Y}_W, \\mathcal{X}_W)\\) assessed using spatial block bootstrap.","code":""},{"path":[]},{"path":"https://stscl.github.io/spEDM/articles/SCT.html","id":"an-example-of-spatial-lattice-data","dir":"Articles","previous_headings":"Usage examples","what":"An example of spatial lattice data","title":"Spatial Causality Test (SCT)","text":"Load spEDM package columbus OH dataset: Detect spatial causality among variables inc, crime, hoval :","code":"library(spEDM)  columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) columbus ## Simple feature collection with 49 features and 6 fields ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 5.874907 ymin: 10.78863 xmax: 11.28742 ymax: 14.74245 ## Projected CRS: Undefined Cartesian SRS with unknown unit ## # A tibble: 49 × 7 ##    hoval   inc  crime  open plumb discbd                                    geom ##    <dbl> <dbl>  <dbl> <dbl> <dbl>  <dbl>                               <POLYGON> ##  1  80.5 19.5  15.7   2.85  0.217   5.03 ((8.624129 14.23698, 8.5597 14.74245, … ##  2  44.6 21.2  18.8   5.30  0.321   4.27 ((8.25279 14.23694, 8.282758 14.22994,… ##  3  26.4 16.0  30.6   4.53  0.374   3.89 ((8.653305 14.00809, 8.81814 14.00205,… ##  4  33.2  4.48 32.4   0.394 1.19    3.7  ((8.459499 13.82035, 8.473408 13.83227… ##  5  23.2 11.3  50.7   0.406 0.625   2.83 ((8.685274 13.63952, 8.677577 13.72221… ##  6  28.8 16.0  26.1   0.563 0.254   3.78 ((9.401384 13.5504, 9.434411 13.69427,… ##  7  75    8.44  0.178 0     2.40    2.74 ((8.037741 13.60752, 8.062716 13.60452… ##  8  37.1 11.3  38.4   3.48  2.74    2.89 ((8.247527 13.58651, 8.2795 13.5965, 8… ##  9  52.6 17.6  30.5   0.527 0.891   3.17 ((9.333297 13.27242, 9.671007 13.27361… ## 10  96.4 13.6  34.0   1.55  0.558   4.33 ((10.08251 13.03377, 10.0925 13.05275,… ## # ℹ 39 more rows # house value and crime sc.test(columbus, \"hoval\", \"crime\", k = 15) ## spatial causality test ## hoval -> crime: statistic = 1.114, p value = 0.539 ## crime -> hoval: statistic = 1.555, p value = 0.005  # household income and crime sc.test(columbus, \"inc\", \"crime\", k = 15) ## spatial causality test ## inc -> crime: statistic = 0.739, p value = 0.965 ## crime -> inc: statistic = 0.946, p value = 0.784  # household income and house value sc.test(columbus, \"inc\", \"hoval\", k = 15) ## spatial causality test ## inc -> hoval: statistic = 1.211, p value = 0.301 ## hoval -> inc: statistic = 0.992, p value = 0.674"},{"path":"https://stscl.github.io/spEDM/articles/SCT.html","id":"an-example-of-spatial-grid-data","dir":"Articles","previous_headings":"Usage examples","what":"An example of spatial grid data","title":"Spatial Causality Test (SCT)","text":"Load spEDM package farmland NPP data: Detect spatial causality among variables pre, tem, npp :","code":"library(spEDM)  npp = terra::rast(system.file(\"case/npp.tif\", package = \"spEDM\")) # To save the computation time, we will aggregate the data by 3 times npp = terra::aggregate(npp, fact = 3, na.rm = TRUE) npp ## class       : SpatRaster  ## dimensions  : 135, 161, 5  (nrow, ncol, nlyr) ## resolution  : 30000, 30000  (x, y) ## extent      : -2625763, 2204237, 1867078, 5917078  (xmin, xmax, ymin, ymax) ## coord. ref. : CGCS2000_Albers  ## source(s)   : memory ## names       :      npp,        pre,      tem,      elev,         hfp  ## min values  :   187.50,   390.3351, -47.8194, -110.1494,  0.04434316  ## max values  : 15381.89, 23734.5330, 262.8576, 5217.6431, 42.68803711 # precipitation and npp sc.test(npp,\"pre\",\"npp\",k = 30) ## spatial causality test ## pre -> npp: statistic = 0.224, p value = 0 ## npp -> pre: statistic = 0.15, p value = 0  # temperature and npp sc.test(npp,\"tem\",\"npp\",k = 30) ## spatial causality test ## tem -> npp: statistic = 0.172, p value = 0 ## npp -> tem: statistic = 0.168, p value = 0  # precipitation and temperature sc.test(npp,\"pre\",\"tem\",k = 30) ## spatial causality test ## pre -> tem: statistic = 0.19, p value = 0 ## tem -> pre: statistic = 0.145, p value = 0"},{"path":"https://stscl.github.io/spEDM/articles/SSR.html","id":"spatial-state-space-reconstruction-s-ssr","dir":"Articles","previous_headings":"","what":"Spatial State Space Reconstruction (S-SSR)","title":"State Space Reconstruction (SSR)","text":"Takens theory proves dynamical system \\(\\phi\\), trajectory converges attractor manifold \\(M\\)—bounded invariant set states—exists smooth mapping system \\(\\phi\\) attractor \\(M\\). Consequently, time series observations \\(\\phi\\) can used reconstruct structure \\(M\\) delay embedding. According generalized embedding theorem, compact \\(d\\)-dimensional manifold \\(M\\) set observation functions \\(\\langle h_1, h_2, \\ldots, h_L \\rangle\\), mapping \\(\\psi_{\\phi,h}(x) = \\langle h_1(x), h_2(x), \\ldots, h_L(x) \\rangle\\) embedding \\(M\\) \\(L \\geq 2d + 1\\). , embedding refers one--one map resolves singularities original manifold. observation functions \\(h_i\\) can take form time-lagged values single time series, lags multiple time series, even completely distinct measurements. former two simply special cases third. embedding framework can extended spatial cross-sectional data, lack temporal ordering observed spatial domain. context, observation functions can defined using values variable focal spatial unit surrounding neighbors (known spatial lags spatial statistics). Specifically, spatial location \\(s\\), embedding can written : \\[ \\psi(x, s) = \\langle h_s(x), h_{s(1)}(x), \\ldots, h_{s(L-1)}(x) \\rangle, \\] \\(h_{s()}(x)\\) denotes observation function \\(\\)-th order spatial lag unit relative \\(s\\). spatial lags provide necessary diversity observations effective manifold reconstruction. practice, given spatial lag order involves multiple units, summary statistics mean directionally-weighted averages can used observation function maintain one--one embedding.","code":""},{"path":[]},{"path":"https://stscl.github.io/spEDM/articles/SSR.html","id":"an-example-of-spatial-lattice-data","dir":"Articles","previous_headings":"Usage examples","what":"An example of spatial lattice data","title":"State Space Reconstruction (SSR)","text":"Load spEDM package county-level population density data: Embedding variable popd county-level population density:","code":"library(spEDM)  popd_nb = spdep::read.gal(system.file(\"case/popd_nb.gal\",package = \"spEDM\")) ## Warning in spdep::read.gal(system.file(\"case/popd_nb.gal\", package = \"spEDM\")): ## neighbour object has 4 sub-graphs popd = readr::read_csv(system.file(\"case/popd.csv\",package = \"spEDM\")) ## Rows: 2806 Columns: 7 ## ── Column specification ──────────────────────────────────────────────────────────────────────────── ## Delimiter: \",\" ## dbl (7): x, y, popd, elev, tem, pre, slope ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. popd_sf = sf::st_as_sf(popd, coords = c(\"x\",\"y\"), crs = 4326) popd_sf ## Simple feature collection with 2806 features and 5 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 74.9055 ymin: 18.2698 xmax: 134.269 ymax: 52.9346 ## Geodetic CRS:  WGS 84 ## # A tibble: 2,806 × 6 ##     popd  elev   tem   pre slope          geometry ##  * <dbl> <dbl> <dbl> <dbl> <dbl>       <POINT [°]> ##  1  780.     8  17.4 1528. 0.452 (116.912 30.4879) ##  2  395.    48  17.2 1487. 0.842 (116.755 30.5877) ##  3  261.    49  16.0 1456. 3.56  (116.541 30.7548) ##  4  258.    23  17.4 1555. 0.932  (116.241 30.104) ##  5  211.   101  16.3 1494. 3.34   (116.173 30.495) ##  6  386.    10  16.6 1382. 1.65  (116.935 30.9839) ##  7  350.    23  17.5 1569. 0.346 (116.677 30.2412) ##  8  470.    22  17.1 1493. 1.88  (117.066 30.6514) ##  9 1226.    11  17.4 1526. 0.208 (117.171 30.5558) ## 10  137.   598  13.9 1458. 5.92  (116.208 30.8983) ## # ℹ 2,796 more rows v = embedded(popd_sf,\"popd\",E = 9,tau = 0,trend.rm = FALSE) v[1:5,c(2,5,6)] ##           [,1]      [,2]     [,3] ## [1,]  440.7237  962.7204 1664.756 ## [2,]  500.0166  919.6000 2408.766 ## [3,]  494.4070 1435.0165 1958.686 ## [4,] 1520.0814 1488.2727 2066.748 ## [5,]  298.5497 2326.8429 1290.188 plot3D::scatter3D(v[,2], v[,5], v[,6], colvar = NULL, pch = 19,                   col = \"red\", theta = 45, phi = 10, cex = 0.45,                   bty = \"f\", clab = NA, tickmarks = FALSE) ## Warning: no DISPLAY variable so Tk is not available"},{"path":"https://stscl.github.io/spEDM/articles/SSR.html","id":"an-example-of-spatial-grid-data","dir":"Articles","previous_headings":"Usage examples","what":"An example of spatial grid data","title":"State Space Reconstruction (SSR)","text":"Load spEDM package soil pollution data: Embedding variable cu soil pollution data:","code":"library(spEDM)  cu = terra::rast(system.file(\"case/cu.tif\", package=\"spEDM\")) cu ## class       : SpatRaster  ## dimensions  : 131, 125, 3  (nrow, ncol, nlyr) ## resolution  : 5000, 5000  (x, y) ## extent      : 360000, 985000, 1555000, 2210000  (xmin, xmax, ymin, ymax) ## coord. ref. : North_American_1983_Albers  ## source      : cu.tif  ## names       :         cu, industry, ntl  ## min values  :   1.201607,    0.000,   0  ## max values  : 319.599274,    0.615,  63 r = spEDM::embedded(cu,\"cu\",E = 9,tau = 0,trend.rm = FALSE) r[1:5,c(1,5,9)] ##          [,1]     [,2]     [,3] ## [1,] 14.80663 13.84810 15.40681 ## [2,] 14.06487 14.07629 15.67661 ## [3,] 14.07302 14.15578 15.78888 ## [4,] 13.38009 14.11540 15.63029 ## [5,] 13.81006 14.25782 15.30874 plot3D::scatter3D(r[,1], r[,5], r[,9], colvar = NULL, pch = 19,                   col = \"#e77854\", theta = 45, phi = 10, cex = 0.45,                   bty = \"f\", clab = NA, tickmarks = FALSE)"},{"path":"https://stscl.github.io/spEDM/articles/SSR.html","id":"determining-optimal-embedding-dimension-using-false-nearest-neighbours","dir":"Articles","previous_headings":"Usage examples","what":"Determining Optimal Embedding Dimension Using False Nearest Neighbours","title":"State Space Reconstruction (SSR)","text":"false nearest neighbours (FNN) method helps identify appropriate embedding dimension reconstructing state space time series spatial cross-sectional. low embedding dimension minimizes false neighbours considered optimal. two examples applying fnn() function. cases, eps set one-tenth standard deviation variable interest, providing relative threshold identifying false neighbours.","code":"fnn(popd_sf,\"popd\",     eps = stats::sd(popd_sf$popd) / 10) ##       E:1       E:2       E:3       E:4       E:5       E:6       E:7       E:8  ## 0.9707769 0.6404134 0.4885959 0.4012830 0.3346401 0.3296507 0.3260870 0.3150392  ##       E:9  ## 0.3150392 fnn(cu,\"cu\",     eps = stats::sd(terra::values(cu[[\"cu\"]]),na.rm = TRUE) / 10) ##        E:1        E:2        E:3        E:4        E:5        E:6        E:7  ## 0.98577099 0.56042748 0.13215267 0.08103817 0.07731298 0.07517557 0.06998473  ##        E:8        E:9  ## 0.06632061 0.05673282"},{"path":"https://stscl.github.io/spEDM/articles/spEDM.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Introduction to the spEDM package","text":"spEDM package open-source, computationally efficient toolkit designed provide unified API Spatial Empirical Dynamic Modeling. supports suite prediction-based causal inference algorithms, including spatial (granger) causality test, geographically convergent cross mapping, geographical cross mapping cardinality. support learning practical application, spEDM offers four carefully curated spatial cross-sectional datasets, paired detailed example showcasing use key algorithms package.","code":""},{"path":"https://stscl.github.io/spEDM/articles/spEDM.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to the spEDM package","text":"Install stable version CRAN : Alternatively, can install development version R-universe :","code":"install.packages(\"spEDM\", dep = TRUE) install.packages(\"spEDM\",                  repos = c(\"https://stscl.r-universe.dev\",                            \"https://cloud.r-project.org\"),                  dep = TRUE)"},{"path":"https://stscl.github.io/spEDM/articles/spEDM.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Introduction to the spEDM package","text":"spEDM package includes four illustrative datasets well-known causation demonstrate key functionalities: Columbus, OH dataset — classic spatial dataset widely used spatial econometrics, included benchmarking demonstration purposes. Data files: columbus.gpkg Population density potential drivers mainland China — county-level dataset capturing population density alongside relevant socio-environmental drivers. Data files: popd.csv, popd_nb.gal Soil copper (Cu) contamination — raster-based dataset representing soil Cu concentrations, associated layers nighttime light intensity industrial density, useful exploring influence human activities environmental pollution. Data files: cu.tif Farmland NPP related variables — raster dataset capturing net primary productivity (NPP) farmland, key climatic variables, elevation, human activity footprints across mainland China, suitable analyzing interactions agricultural productivity, environmental conditions, human activities. Data files: npp.tif datasets can loaded shown , including basic visualization raster data:","code":""},{"path":"https://stscl.github.io/spEDM/articles/spEDM.html","id":"columbus-oh-spatial-analysis-dataset","dir":"Articles","previous_headings":"Data","what":"Columbus OH spatial analysis dataset","title":"Introduction to the spEDM package","text":"","code":"library(spEDM)  columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) columbus ## Simple feature collection with 49 features and 6 fields ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 5.874907 ymin: 10.78863 xmax: 11.28742 ymax: 14.74245 ## Projected CRS: Undefined Cartesian SRS with unknown unit ## # A tibble: 49 × 7 ##    hoval   inc  crime  open plumb discbd                                     geom ##    <dbl> <dbl>  <dbl> <dbl> <dbl>  <dbl>                                <POLYGON> ##  1  80.5 19.5  15.7   2.85  0.217   5.03 ((8.624129 14.23698, 8.5597 14.74245, 8… ##  2  44.6 21.2  18.8   5.30  0.321   4.27 ((8.25279 14.23694, 8.282758 14.22994, … ##  3  26.4 16.0  30.6   4.53  0.374   3.89 ((8.653305 14.00809, 8.81814 14.00205, … ##  4  33.2  4.48 32.4   0.394 1.19    3.7  ((8.459499 13.82035, 8.473408 13.83227,… ##  5  23.2 11.3  50.7   0.406 0.625   2.83 ((8.685274 13.63952, 8.677577 13.72221,… ##  6  28.8 16.0  26.1   0.563 0.254   3.78 ((9.401384 13.5504, 9.434411 13.69427, … ##  7  75    8.44  0.178 0     2.40    2.74 ((8.037741 13.60752, 8.062716 13.60452,… ##  8  37.1 11.3  38.4   3.48  2.74    2.89 ((8.247527 13.58651, 8.2795 13.5965, 8.… ##  9  52.6 17.6  30.5   0.527 0.891   3.17 ((9.333297 13.27242, 9.671007 13.27361,… ## 10  96.4 13.6  34.0   1.55  0.558   4.33 ((10.08251 13.03377, 10.0925 13.05275, … ## # ℹ 39 more rows"},{"path":"https://stscl.github.io/spEDM/articles/spEDM.html","id":"county-level-population-density-in-mainland-china","dir":"Articles","previous_headings":"Data","what":"County-level population density in mainland China","title":"Introduction to the spEDM package","text":"","code":"library(spEDM)  popd_nb = spdep::read.gal(system.file(\"case/popd_nb.gal\",package = \"spEDM\")) ## Warning in spdep::read.gal(system.file(\"case/popd_nb.gal\", package = \"spEDM\")): ## neighbour object has 4 sub-graphs popd_nb ## Neighbour list object: ## Number of regions: 2806  ## Number of nonzero links: 15942  ## Percentage nonzero weights: 0.2024732  ## Average number of links: 5.681397  ## 4 disjoint connected subgraphs  popd = readr::read_csv(system.file(\"case/popd.csv\",package = \"spEDM\")) ## Rows: 2806 Columns: 7 ## ── Column specification ───────────────────────────────────────────────────────── ## Delimiter: \",\" ## dbl (7): x, y, popd, elev, tem, pre, slope ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. popd ## # A tibble: 2,806 × 7 ##        x     y  popd  elev   tem   pre slope ##    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> ##  1  117.  30.5  780.     8  17.4 1528. 0.452 ##  2  117.  30.6  395.    48  17.2 1487. 0.842 ##  3  117.  30.8  261.    49  16.0 1456. 3.56  ##  4  116.  30.1  258.    23  17.4 1555. 0.932 ##  5  116.  30.5  211.   101  16.3 1494. 3.34  ##  6  117.  31.0  386.    10  16.6 1382. 1.65  ##  7  117.  30.2  350.    23  17.5 1569. 0.346 ##  8  117.  30.7  470.    22  17.1 1493. 1.88  ##  9  117.  30.6 1226.    11  17.4 1526. 0.208 ## 10  116.  30.9  137.   598  13.9 1458. 5.92  ## # ℹ 2,796 more rows  popd_sf = sf::st_as_sf(popd, coords = c(\"x\",\"y\"), crs = 4326) popd_sf ## Simple feature collection with 2806 features and 5 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 74.9055 ymin: 18.2698 xmax: 134.269 ymax: 52.9346 ## Geodetic CRS:  WGS 84 ## # A tibble: 2,806 × 6 ##     popd  elev   tem   pre slope          geometry ##  * <dbl> <dbl> <dbl> <dbl> <dbl>       <POINT [°]> ##  1  780.     8  17.4 1528. 0.452 (116.912 30.4879) ##  2  395.    48  17.2 1487. 0.842 (116.755 30.5877) ##  3  261.    49  16.0 1456. 3.56  (116.541 30.7548) ##  4  258.    23  17.4 1555. 0.932  (116.241 30.104) ##  5  211.   101  16.3 1494. 3.34   (116.173 30.495) ##  6  386.    10  16.6 1382. 1.65  (116.935 30.9839) ##  7  350.    23  17.5 1569. 0.346 (116.677 30.2412) ##  8  470.    22  17.1 1493. 1.88  (117.066 30.6514) ##  9 1226.    11  17.4 1526. 0.208 (117.171 30.5558) ## 10  137.   598  13.9 1458. 5.92  (116.208 30.8983) ## # ℹ 2,796 more rows"},{"path":"https://stscl.github.io/spEDM/articles/spEDM.html","id":"soil-cu-heavy-metal-contamination","dir":"Articles","previous_headings":"Data","what":"Soil Cu heavy metal contamination","title":"Introduction to the spEDM package","text":"","code":"library(spEDM)  cu = terra::rast(system.file(\"case/cu.tif\", package=\"spEDM\")) cu ## class       : SpatRaster  ## dimensions  : 131, 125, 3  (nrow, ncol, nlyr) ## resolution  : 5000, 5000  (x, y) ## extent      : 360000, 985000, 1555000, 2210000  (xmin, xmax, ymin, ymax) ## coord. ref. : North_American_1983_Albers  ## source      : cu.tif  ## names       :         cu, industry, ntl  ## min values  :   1.201607,    0.000,   0  ## max values  : 319.599274,    0.615,  63  options(terra.pal = grDevices::terrain.colors(100,rev = T)) terra::plot(cu, nc = 3,             mar = rep(0.1,4),             oma = rep(0.1,4),             axes = FALSE,             legend = FALSE)"},{"path":"https://stscl.github.io/spEDM/articles/spEDM.html","id":"farmland-npp-and-related-variables-in-mainland-china","dir":"Articles","previous_headings":"Data","what":"Farmland NPP and related variables in mainland China","title":"Introduction to the spEDM package","text":"","code":"library(spEDM) npp = terra::rast(system.file(\"case/npp.tif\", package = \"spEDM\")) npp ## class       : SpatRaster  ## dimensions  : 404, 483, 5  (nrow, ncol, nlyr) ## resolution  : 10000, 10000  (x, y) ## extent      : -2625763, 2204237, 1877078, 5917078  (xmin, xmax, ymin, ymax) ## coord. ref. : CGCS2000_Albers  ## source      : npp.tif  ## names       :      npp,        pre,      tem,      elev,         hfp  ## min values  :   164.00,   384.3409, -47.8194, -122.2004,  0.03390418  ## max values  : 16606.33, 23878.3555, 263.6938, 5350.4902, 44.90312195  # directly visualize the raster layer options(terra.pal = grDevices::terrain.colors(100,rev = T)) terra::plot(npp, nc = 2,             axes = FALSE,             legend = FALSE) # add China's land borders and the ten-dash line in the South China Sea  # install.packages(\"geocn\", #                  repos = c(\"https://stscl.r-universe.dev\", #                            \"https://cloud.r-project.org\"), #                  dep = TRUE)  cn_border = geocn::load_cn_border() |>   terra::vect() |>   terra::project(terra::crs(npp))  par(mfrow = c(3, 2)) for (i in 1:terra::nlyr(npp)) {   terra::plot(cn_border, lwd = 1.5, main = names(npp)[i],               col = \"grey40\", axes = FALSE)   terra::plot(npp[[i]], axes = FALSE,               legend = FALSE, add = TRUE) }"},{"path":"https://stscl.github.io/spEDM/articles/spEDM.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Introduction to the spEDM package","text":"Users can refer several additional vignettes detailed examples using spEDM, namely: addition spatial extensions provided spEDM, several R packages support Empirical Dynamic Modeling (EDM) time series data: rEDM: foundational EDM package implementing simplex projection, S-map, convergent cross mapping (CCM), widely used analyzing nonlinear time series dynamics. multispatialCCM: Implements CCM collections short time series using bootstrapping, enabling causal inference across replicated multi-site time series. fastEDM: high-performance EDM package multi-threaded C++ backend. supports large-scale time series analysis, handles panel data, provides robust options dealing missing values using delay-tolerant algorithms data exclusion.","code":""},{"path":"https://stscl.github.io/spEDM/articles/spEDM.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to the spEDM package","text":"Takens, F. (1981). Detecting strange attractors turbulence. Dynamical Systems Turbulence, Warwick 1980, 366–381. https://doi.org/10.1007/bfb0091924 Mañé, R. (1981). dimension compact invariant sets certain non-linear maps. Dynamical Systems Turbulence, Warwick 1980, 230–242. https://doi.org/10.1007/bfb0091916 Herrera, M., Mur, J., & Ruiz, M. (2016). Detecting causal relationships spatial processes. Papers Regional Science, 95(3), 577–595. https://doi.org/10.1111/pirs.12144 Gao, B., Yang, J., Chen, Z., Sugihara, G., Li, M., Stein, ., Kwan, M.-P., & Wang, J. (2023). Causal inference cross-sectional earth system data geographical convergent cross mapping. Nature Communications, 14(1). https://doi.org/10.1038/s41467-023-41619-6","code":""},{"path":"https://stscl.github.io/spEDM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wenbo Lv. Author, maintainer, copyright holder.","code":""},{"path":"https://stscl.github.io/spEDM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lv W (2025). spEDM: Spatial Empirical Dynamic Modeling. R package version 1.7, https://stscl.github.io/spEDM/.","code":"@Manual{,   title = {spEDM: Spatial Empirical Dynamic Modeling},   author = {Wenbo Lv},   year = {2025},   note = {R package version 1.7},   url = {https://stscl.github.io/spEDM/}, }"},{"path":"https://stscl.github.io/spEDM/index.html","id":"spedm-","dir":"","previous_headings":"","what":"spEDM | Spatial Empirical Dynamic Modeling\n","title":"spEDM | Spatial Empirical Dynamic Modeling\n","text":"Spatial Empirical Dynamic Modeling","code":""},{"path":"https://stscl.github.io/spEDM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"spEDM | Spatial Empirical Dynamic Modeling\n","text":"Install CRAN : Install binary version R-universe : Install source code GitHub :","code":"install.packages(\"spEDM\", dep = TRUE) install.packages(\"spEDM\",                  repos = c(\"https://stscl.r-universe.dev\",                            \"https://cloud.r-project.org\"),                  dep = TRUE) if (!requireNamespace(\"devtools\")) {     install.packages(\"devtools\") } devtools::install_github(\"stscl/spEDM\",                          build_vignettes = TRUE,                          dep = TRUE)"},{"path":"https://stscl.github.io/spEDM/reference/detectThreads.html","id":null,"dir":"Reference","previous_headings":"","what":"detect the number of available threads — detectThreads","title":"detect the number of available threads — detectThreads","text":"detect number available threads","code":""},{"path":"https://stscl.github.io/spEDM/reference/detectThreads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"detect the number of available threads — detectThreads","text":"","code":"detectThreads()"},{"path":"https://stscl.github.io/spEDM/reference/detectThreads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"detect the number of available threads — detectThreads","text":"integer","code":""},{"path":"https://stscl.github.io/spEDM/reference/detectThreads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"detect the number of available threads — detectThreads","text":"","code":"# \\donttest{ detectThreads() #> [1] 4 # }"},{"path":"https://stscl.github.io/spEDM/reference/embedded.html","id":null,"dir":"Reference","previous_headings":"","what":"embedding spatial cross sectional data — embedded","title":"embedding spatial cross sectional data — embedded","text":"embedding spatial cross sectional data","code":""},{"path":"https://stscl.github.io/spEDM/reference/embedded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"embedding spatial cross sectional data — embedded","text":"","code":"# S4 method for class 'sf' embedded(data, target, E = 3, tau = 1, nb = NULL, trend.rm = FALSE)  # S4 method for class 'SpatRaster' embedded(data, target, E = 3, tau = 1, trend.rm = FALSE)"},{"path":"https://stscl.github.io/spEDM/reference/embedded.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"embedding spatial cross sectional data — embedded","text":"data observation data. target Name target variable. E (optional) Dimensions embedding. tau (optional) Step spatial lags. nb (optional) neighbours list. trend.rm (optional) Whether remove linear trend.","code":""},{"path":"https://stscl.github.io/spEDM/reference/embedded.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"embedding spatial cross sectional data — embedded","text":"matrix","code":""},{"path":"https://stscl.github.io/spEDM/reference/embedded.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"embedding spatial cross sectional data — embedded","text":"","code":"columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) v = embedded(columbus,\"crime\") v[1:5,] #>          [,1]     [,2]     [,3] #> [1,] 24.71427 41.55964 43.45135 #> [2,] 26.24684 44.57868 40.73529 #> [3,] 29.41175 43.45135 37.55683 #> [4,] 34.64648 37.95647 38.69064 #> [5,] 40.46533 34.43484 42.28334  cu = terra::rast(system.file(\"case/cu.tif\", package=\"spEDM\")) r = embedded(cu,\"cu\") r[1:5,] #>          [,1]     [,2]     [,3] #> [1,] 14.13616 13.86900 13.60871 #> [2,] 14.09866 13.59174 13.77765 #> [3,] 13.57425 13.91658 14.02535 #> [4,] 13.61885 13.81650 14.26563 #> [5,] 13.82547 13.76455 14.03200"},{"path":"https://stscl.github.io/spEDM/reference/fnn.html","id":null,"dir":"Reference","previous_headings":"","what":"false nearest neighbours — fnn","title":"false nearest neighbours — fnn","text":"false nearest neighbours","code":""},{"path":"https://stscl.github.io/spEDM/reference/fnn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"false nearest neighbours — fnn","text":"","code":"# S4 method for class 'sf' fnn(   data,   target,   lib = NULL,   pred = NULL,   E = 1:10,   tau = 1,   nb = NULL,   rt = 10,   eps = 2,   threads = detectThreads(),   trend.rm = TRUE )  # S4 method for class 'SpatRaster' fnn(   data,   target,   lib = NULL,   pred = NULL,   E = 1:10,   tau = 1,   rt = 10,   eps = 2,   threads = detectThreads(),   trend.rm = TRUE )"},{"path":"https://stscl.github.io/spEDM/reference/fnn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"false nearest neighbours — fnn","text":"data observation data. target Name target variable. lib (optional) Libraries indices. pred (optional) Predictions indices. E (optional) Dimensions embedding. tau (optional) Step spatial lags. nb (optional) neighbours list. rt (optional) escape factor. eps (optional) neighborhood diameter. threads (optional) Number threads. trend.rm (optional) Whether remove linear trend.","code":""},{"path":"https://stscl.github.io/spEDM/reference/fnn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"false nearest neighbours — fnn","text":"vector","code":""},{"path":"https://stscl.github.io/spEDM/reference/fnn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"false nearest neighbours — fnn","text":"Kennel M. B., Brown R. Abarbanel H. D. ., Determining embedding dimension phase-space reconstruction using geometrical construction, Phys. Rev. , Volume 45, 3403 (1992).","code":""},{"path":"https://stscl.github.io/spEDM/reference/fnn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"false nearest neighbours — fnn","text":"","code":"columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) # \\donttest{ fnn(columbus,\"crime\") #>        E:1        E:2        E:3        E:4        E:5        E:6        E:7  #> 0.79591837 0.53061224 0.63265306 0.51020408 0.12244898 0.04081633 0.00000000  #>        E:8  #> 0.00000000  # }"},{"path":"https://stscl.github.io/spEDM/reference/gccm.html","id":null,"dir":"Reference","previous_headings":"","what":"geographical convergent cross mapping — gccm","title":"geographical convergent cross mapping — gccm","text":"geographical convergent cross mapping","code":""},{"path":"https://stscl.github.io/spEDM/reference/gccm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geographical convergent cross mapping — gccm","text":"","code":"# S4 method for class 'sf' gccm(   data,   cause,   effect,   libsizes,   E = 3,   tau = 1,   k = E + 2,   theta = 1,   algorithm = \"simplex\",   lib = NULL,   pred = NULL,   nb = NULL,   threads = detectThreads(),   parallel.level = \"low\",   bidirectional = TRUE,   trend.rm = TRUE,   progressbar = TRUE )  # S4 method for class 'SpatRaster' gccm(   data,   cause,   effect,   libsizes,   E = 3,   tau = 1,   k = E + 2,   theta = 1,   algorithm = \"simplex\",   lib = NULL,   pred = NULL,   threads = detectThreads(),   parallel.level = \"low\",   bidirectional = TRUE,   trend.rm = TRUE,   progressbar = TRUE )"},{"path":"https://stscl.github.io/spEDM/reference/gccm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geographical convergent cross mapping — gccm","text":"data observation data. cause Name causal variable. effect Name effect variable. libsizes Number spatial units used prediction. E (optional) Dimensions embedding. tau (optional) Step spatial lags. k (optional) Number nearest neighbors used prediction. theta (optional) Weighting parameter distances, useful algorithm smap. algorithm (optional) Algorithm used prediction. lib (optional) Libraries indices. pred (optional) Predictions indices. nb (optional) neighbours list. threads (optional) Number threads. parallel.level (optional) Level parallelism, low high. bidirectional (optional) whether examine bidirectional causality. trend.rm (optional) Whether remove linear trend. progressbar (optional) whether show progress bar.","code":""},{"path":"https://stscl.github.io/spEDM/reference/gccm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geographical convergent cross mapping — gccm","text":"list xmap cross mapping results varname names causal effect variable bidirectional whether examine bidirectional causality","code":""},{"path":"https://stscl.github.io/spEDM/reference/gccm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"geographical convergent cross mapping — gccm","text":"Gao, B., Yang, J., Chen, Z. et al. Causal inference cross-sectional earth system data geographical convergent cross mapping. Nat Commun 14, 5875 (2023).","code":""},{"path":"https://stscl.github.io/spEDM/reference/gccm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"geographical convergent cross mapping — gccm","text":"","code":"columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) # \\donttest{ g = gccm(columbus,\"hoval\",\"crime\",libsizes = seq(5,45,5),E = 6) #>  Computing: [========================================] 100% (done)                          #>  Computing: [========================================] 100% (done)                          g #>   libsizes hoval->crime crime->hoval #> 1        5    0.1301861    0.2642894 #> 2       10    0.1762769    0.3961522 #> 3       15    0.2197481    0.4672470 #> 4       20    0.2324435    0.5144297 #> 5       25    0.2354728    0.5713321 #> 6       30    0.2360934    0.6048914 #> 7       35    0.2412944    0.6253026 #> 8       40    0.2383788    0.6364897 #> 9       45    0.2339483    0.6484721 plot(g, ylimits = c(0,0.85))  # }"},{"path":"https://stscl.github.io/spEDM/reference/gcmc.html","id":null,"dir":"Reference","previous_headings":"","what":"geographical cross mapping cardinality — gcmc","title":"geographical cross mapping cardinality — gcmc","text":"geographical cross mapping cardinality","code":""},{"path":"https://stscl.github.io/spEDM/reference/gcmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geographical cross mapping cardinality — gcmc","text":"","code":"# S4 method for class 'sf' gcmc(   data,   cause,   effect,   E = 3,   tau = 1,   k = NULL,   r = 0,   lib = NULL,   pred = NULL,   nb = NULL,   threads = detectThreads(),   bidirectional = TRUE,   trend.rm = TRUE,   progressbar = TRUE )  # S4 method for class 'SpatRaster' gcmc(   data,   cause,   effect,   E = 3,   tau = 1,   k = NULL,   r = 0,   lib = NULL,   pred = NULL,   threads = detectThreads(),   bidirectional = TRUE,   trend.rm = TRUE,   progressbar = TRUE )"},{"path":"https://stscl.github.io/spEDM/reference/gcmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geographical cross mapping cardinality — gcmc","text":"data observation data. cause Name causal variable. effect Name effect variable. E (optional) Dimensions embedding. tau (optional) Step spatial lags. k (optional) Number nearest neighbors used intersection. r (optional) Number excluded neighbors intersection. lib (optional) Libraries indices. pred (optional) Predictions indices. nb (optional) neighbours list. threads (optional) Number threads. bidirectional (optional) whether examine bidirectional causality. trend.rm (optional) Whether remove linear trend. progressbar (optional) whether show progress bar.","code":""},{"path":"https://stscl.github.io/spEDM/reference/gcmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geographical cross mapping cardinality — gcmc","text":"list xmap cross mapping results varname names causal effect variable bidirectional whether examine bidirectional causality","code":""},{"path":"https://stscl.github.io/spEDM/reference/gcmc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"geographical cross mapping cardinality — gcmc","text":"","code":"columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) # \\donttest{ g = gcmc(columbus,\"hoval\",\"crime\",E = 5) #>  Computing: [========================================] 100% (done)                          #>  Computing: [========================================] 100% (done)                          g #>   neighbors hoval->crime crime->hoval #> 1        17      0.16609    0.2041522 # }"},{"path":"https://stscl.github.io/spEDM/reference/multiview.html","id":null,"dir":"Reference","previous_headings":"","what":"multiview embedding forecast — multiview","title":"multiview embedding forecast — multiview","text":"multiview embedding forecast","code":""},{"path":"https://stscl.github.io/spEDM/reference/multiview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multiview embedding forecast — multiview","text":"","code":"# S4 method for class 'sf' multiview(   data,   columns,   target,   nvar,   lib = NULL,   pred = NULL,   E = 3,   tau = 1,   k = E + 2,   nb = NULL,   top = NULL,   threads = detectThreads(),   trend.rm = TRUE )  # S4 method for class 'SpatRaster' multiview(   data,   columns,   target,   nvar,   lib = NULL,   pred = NULL,   E = 3,   tau = 1,   k = E + 2,   top = NULL,   threads = detectThreads(),   trend.rm = TRUE )"},{"path":"https://stscl.github.io/spEDM/reference/multiview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"multiview embedding forecast — multiview","text":"data observation data. columns Names individual variables. target Name target variable. nvar Number variable combinations. lib (optional) Libraries indices. pred (optional) Predictions indices. E (optional) Dimensions embedding. tau (optional) Step spatial lags. k (optional) Number nearest neighbors used prediction. nb (optional) neighbours list. top (optional) Number reconstructions used MVE forecast. threads (optional) Number threads. trend.rm (optional) Whether remove linear trend.","code":""},{"path":"https://stscl.github.io/spEDM/reference/multiview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multiview embedding forecast — multiview","text":"vector (input sf object) matrix","code":""},{"path":"https://stscl.github.io/spEDM/reference/multiview.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"multiview embedding forecast — multiview","text":"Ye H., G. Sugihara, 2016. Information leverage interconnected ecosystems: Overcoming curse dimensionality. Science 353:922-925.","code":""},{"path":"https://stscl.github.io/spEDM/reference/multiview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"multiview embedding forecast — multiview","text":"","code":"columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) # \\donttest{ multiview(columbus,           columns = c(\"inc\",\"crime\",\"open\",\"plumb\",\"discbd\"),           target = \"hoval\", nvar = 3) #>  [1]  18.8646054  22.4869617  21.1550738  -1.1253460  -9.1007114  -2.7903615 #>  [7]  -7.6201012  -6.6613986  -8.7202885  16.2907046 -13.4100870   5.5617166 #> [13]  -4.6242104  -6.0215133 -12.1983725  -9.3303243  14.4441917   2.2055448 #> [19]  -4.3641292  -6.0871013 -11.5193470   2.6235111  13.7585733  -8.7467063 #> [25]  -9.7543853  -4.1516025   3.8137697 -18.6397054 -12.1462767 -12.0658493 #> [31]  10.9218398  19.4799373  -8.1531852  16.5727910   0.7379578   8.5333685 #> [37] -15.5058094 -17.8177107  23.9793164  27.1593848  18.1874514  -2.9723211 #> [43]  -2.8697946  -8.5016198   1.2200571   5.7208429  15.1875343   6.5063233 #> [49]   0.2310141 # }"},{"path":"https://stscl.github.io/spEDM/reference/sc.test.html","id":null,"dir":"Reference","previous_headings":"","what":"spatial causality test — sc.test","title":"spatial causality test — sc.test","text":"spatial causality test","code":""},{"path":"https://stscl.github.io/spEDM/reference/sc.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatial causality test — sc.test","text":"","code":"# S4 method for class 'sf' sc.test(   data,   cause,   effect,   k,   block = 3,   boot = 399,   seed = 42,   base = 2,   lib = NULL,   pred = NULL,   nb = NULL,   threads = detectThreads(),   trend.rm = TRUE,   normalize = FALSE,   progressbar = FALSE )  # S4 method for class 'SpatRaster' sc.test(   data,   cause,   effect,   k,   block = 3,   boot = 399,   seed = 42,   base = 2,   lib = NULL,   pred = NULL,   threads = detectThreads(),   trend.rm = TRUE,   normalize = FALSE,   progressbar = FALSE )"},{"path":"https://stscl.github.io/spEDM/reference/sc.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatial causality test — sc.test","text":"data observation data. cause Name causal variable. effect Name effect variable. k (optional) Number nearest neighbors used symbolization. block (optional) Number blocks used spatial block bootstrap. boot (optional) Number bootstraps perform. seed (optional) random seed. base (optional) Base logarithm. lib (optional) Libraries indices. pred (optional) Predictions indices. nb (optional) neighbours list. threads (optional) Number threads. trend.rm (optional) Whether remove linear trend. normalize (optional) Whether normalize result. progressbar (optional) Whether show progress bar.","code":""},{"path":"https://stscl.github.io/spEDM/reference/sc.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatial causality test — sc.test","text":"list sc statistic spatial causality varname names causal effect variable","code":""},{"path":"https://stscl.github.io/spEDM/reference/sc.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"spatial causality test — sc.test","text":"Herrera, M., Mur, J., & Ruiz, M. (2016). Detecting causal relationships spatial processes. Papers Regional Science, 95(3), 577–595.","code":""},{"path":"https://stscl.github.io/spEDM/reference/sc.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatial causality test — sc.test","text":"","code":"columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) # \\donttest{ sc.test(columbus,\"hoval\",\"crime\", k = 15) #> spatial causality test #> hoval -> crime: statistic = 1.114, p value = 0.539 #> crime -> hoval: statistic = 1.555, p value = 0.005 # }"},{"path":"https://stscl.github.io/spEDM/reference/simplex.html","id":null,"dir":"Reference","previous_headings":"","what":"simplex forecast — simplex","title":"simplex forecast — simplex","text":"simplex forecast","code":""},{"path":"https://stscl.github.io/spEDM/reference/simplex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simplex forecast — simplex","text":"","code":"# S4 method for class 'sf' simplex(   data,   target,   lib = NULL,   pred = NULL,   E = 1:10,   tau = 1,   k = E + 2,   nb = NULL,   threads = detectThreads(),   trend.rm = TRUE )  # S4 method for class 'SpatRaster' simplex(   data,   target,   lib = NULL,   pred = NULL,   E = 1:10,   tau = 1,   k = E + 2,   threads = detectThreads(),   trend.rm = TRUE )"},{"path":"https://stscl.github.io/spEDM/reference/simplex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simplex forecast — simplex","text":"data observation data. target Name target variable. lib (optional) Libraries indices. pred (optional) Predictions indices. E (optional) Dimensions embedding. tau (optional) Step spatial lags. k (optional) Number nearest neighbors used prediction. nb (optional) neighbours list. threads (optional) Number threads. trend.rm (optional) Whether remove linear trend.","code":""},{"path":"https://stscl.github.io/spEDM/reference/simplex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simplex forecast — simplex","text":"list xmap self mapping prediction results varname name target variable","code":""},{"path":"https://stscl.github.io/spEDM/reference/simplex.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"simplex forecast — simplex","text":"Sugihara G. May R. 1990. Nonlinear forecasting way distinguishing chaos measurement error time series. Nature, 344:734-741.","code":""},{"path":"https://stscl.github.io/spEDM/reference/simplex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"simplex forecast — simplex","text":"","code":"columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) # \\donttest{ simplex(columbus,\"crime\") #> The suggested E and k for variable crime is 5 and 8  # }"},{"path":"https://stscl.github.io/spEDM/reference/smap.html","id":null,"dir":"Reference","previous_headings":"","what":"smap forecast — smap","title":"smap forecast — smap","text":"smap forecast","code":""},{"path":"https://stscl.github.io/spEDM/reference/smap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"smap forecast — smap","text":"","code":"# S4 method for class 'sf' smap(   data,   target,   lib = NULL,   pred = NULL,   E = 3,   tau = 1,   k = E + 2,   theta = c(0, 1e-04, 3e-04, 0.001, 0.003, 0.01, 0.03, 0.1, 0.3, 0.5, 0.75, 1, 1.5, 2, 3,     4, 6, 8),   nb = NULL,   threads = detectThreads(),   trend.rm = TRUE )  # S4 method for class 'SpatRaster' smap(   data,   target,   lib = NULL,   pred = NULL,   E = 3,   tau = 1,   k = E + 2,   theta = c(0, 1e-04, 3e-04, 0.001, 0.003, 0.01, 0.03, 0.1, 0.3, 0.5, 0.75, 1, 1.5, 2, 3,     4, 6, 8),   threads = detectThreads(),   trend.rm = TRUE )"},{"path":"https://stscl.github.io/spEDM/reference/smap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"smap forecast — smap","text":"data observation data. target Name target variable. lib (optional) Libraries indices. pred (optional) Predictions indices. E (optional) Dimensions embedding. tau (optional) Step spatial lags. k (optional) Number nearest neighbors used prediction. theta (optional) Weighting parameter distances. nb (optional) neighbours list. threads (optional) Number threads. trend.rm (optional) Whether remove linear trend.","code":""},{"path":"https://stscl.github.io/spEDM/reference/smap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"smap forecast — smap","text":"list xmap self mapping prediction results varname name target variable","code":""},{"path":"https://stscl.github.io/spEDM/reference/smap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"smap forecast — smap","text":"Sugihara G. 1994. Nonlinear forecasting classification natural time series. Philosophical Transactions: Physical Sciences Engineering, 348 (1688):477-495.","code":""},{"path":"https://stscl.github.io/spEDM/reference/smap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"smap forecast — smap","text":"","code":"columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) # \\donttest{ smap(columbus,\"inc\") #> The suggested theta for variable inc is 4  # }"},{"path":[]},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"enhancements-1-7","dir":"Changelog","previous_headings":"","what":"enhancements","title":"spEDM 1.7","text":"Introduce confidence interval ribbon support plot method gccm results (#550).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"bug-fixes-1-7","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"spEDM 1.7","text":"Fix bug S3 plotting method gccm legend labels correctly match corresponding line colors (#552).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"spedm-16","dir":"Changelog","previous_headings":"","what":"spEDM 1.6","title":"spEDM 1.6","text":"CRAN release: 2025-05-16","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"new-1-6","dir":"Changelog","previous_headings":"","what":"new","title":"spEDM 1.6","text":"Enact fnn R API support false nearest neighbours method (#512). Integrate R API vignette geographical cross mapping cardinality (#455). Provide R-level API vignette spatial causality test (#403).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"enhancements-1-6","dir":"Changelog","previous_headings":"","what":"enhancements","title":"spEDM 1.6","text":"Enable custom legend texts colors plot method gccm results (#535). Reduce computational load vignettes (#476). Document overall structure usage spEDM dedicated vignette (#415). Create SSR vignette spatial cross-sectional data state-space reconstruction (#412). Include references algorithms spEDM (#367).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"breaking-changes-1-6","dir":"Changelog","previous_headings":"","what":"breaking changes","title":"spEDM 1.6","text":"Use non-NA spatial units lib/pred default (#499). Refine internal case data (#348).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"bug-fixes-1-6","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"spEDM 1.6","text":"Patch memory error caused mismatch C++ (0-based) R (1-based) indexing (#480). Fix error non-matrix input grid-type handling due R matrix slicing (#474).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"spedm-15","dir":"Changelog","previous_headings":"","what":"spEDM 1.5","title":"spEDM 1.5","text":"CRAN release: 2025-03-12","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"new-1-5","dir":"Changelog","previous_headings":"","what":"new","title":"spEDM 1.5","text":"Enable parallel.level parameter specify parallel granularity gccm R API (#310). Implement multiview function multiview embedding forecasting (MVE) method (#221).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"enhancements-1-5","dir":"Changelog","previous_headings":"","what":"enhancements","title":"spEDM 1.5","text":"Integrate lib parameter gccm R API library units selection (#278). Set default k E+2 gccm R API (#261). Eliminate redundant computations source C++ code level (#233). Add trend.rm option R API embedded, simplex, smap methods align gccm behavior (#191). Refactor indexing lag values embedding vector generation spatial lattice (#186,#184) grid data (#183,#181).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"breaking-changes-1-5","dir":"Changelog","previous_headings":"","what":"breaking changes","title":"spEDM 1.5","text":"Default plotting method places legend top-left corner plot now (#325). Refine simplex & smap output R side (#263).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"bug-fixes-1-5","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"spEDM 1.5","text":"Fix bug R functions embedded, simplex, smap input data contains one attribute column (#246).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"spedm-14","dir":"Changelog","previous_headings":"","what":"spEDM 1.4","title":"spEDM 1.4","text":"CRAN release: 2025-02-10","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"enhancements-1-4","dir":"Changelog","previous_headings":"","what":"enhancements","title":"spEDM 1.4","text":"Improve default spatial neighbors list generation spatial lattice data support sdsfun package (#159).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"breaking-changes-1-4","dir":"Changelog","previous_headings":"","what":"breaking changes","title":"spEDM 1.4","text":"Adjust behavior tau parameter C++ source code update R side API (#154).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"spedm-13","dir":"Changelog","previous_headings":"","what":"spEDM 1.3","title":"spEDM 1.3","text":"CRAN release: 2025-02-01","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"new-1-3","dir":"Changelog","previous_headings":"","what":"new","title":"spEDM 1.3","text":"Implement smap function enable selection optimal theta parameter (#128). Add simplex function support selecting optimal embedding dimension variables (#98). Provide R-level API generating embeddings (#97).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"enhancements-1-3","dir":"Changelog","previous_headings":"","what":"enhancements","title":"spEDM 1.3","text":"Now bidirectional mapping gccm result uses full join structure organized R side (#118). Support calculating unidirectional mappings gccm function (#117). Relax gccm C++ source code libsizes minimum value constraint E+2 (#109). Provide complete GCCM workflow spatial lattice grid data gccm vignette (#100). Support testing causal links GCCM different E k cause effect variables (#96). Add thread settings gccm (#94). Add S-maps cross-prediction support gccm (#81).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"bug-fixes-1-3","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"spEDM 1.3","text":"Resolve r crash caused invalid E #90 k #89 parameter settings gccm. Fix incorrect Pearson correlation calculation C++ code input contains NA (#83).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"spedm-12","dir":"Changelog","previous_headings":"","what":"spEDM 1.2","title":"spEDM 1.2","text":"CRAN release: 2025-01-14","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"enhancements-1-2","dir":"Changelog","previous_headings":"","what":"enhancements","title":"spEDM 1.2","text":"Encapsulate gccm function using S4 class (#72). Add options tau, k, progressbar gccm (#69). Add print plot s3 methods gccm result (#64).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"bug-fixes-1-2","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"spEDM 1.2","text":"Fix bug gccm function returns empty results input grid data contains NA values (#61).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"spedm-11","dir":"Changelog","previous_headings":"","what":"spEDM 1.1","title":"spEDM 1.1","text":"CRAN release: 2024-12-19","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"bug-fixes-1-1","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"spEDM 1.1","text":"Resolve CRAN auto check issues, significant API changes.","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"spedm-10","dir":"Changelog","previous_headings":"","what":"spEDM 1.0","title":"spEDM 1.0","text":"CRAN release: 2024-12-16","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"new-1-0","dir":"Changelog","previous_headings":"","what":"new","title":"spEDM 1.0","text":"Implementing GCCM method spatial lattice grid data using modern C++.","code":""}]
