[{"path":"https://stscl.github.io/spEDM/articles/GCCM.html","id":"install-the-spedm-package","dir":"Articles","previous_headings":"","what":"1.1 Install the spEDM package","title":"Geographical Convergent Cross Mapping (GCCM)","text":"Install stable version CRAN : Alternatively, can install development version R-universe :","code":"install.packages(\"spEDM\", dep = TRUE) install.packages(\"spEDM\",                  repos = c(\"https://stscl.r-universe.dev\",                            \"https://cloud.r-project.org\"),                  dep = TRUE)"},{"path":"https://stscl.github.io/spEDM/articles/GCCM.html","id":"an-example-of-spatial-lattice-data","dir":"Articles","previous_headings":"","what":"1.2 An example of spatial lattice data","title":"Geographical Convergent Cross Mapping (GCCM)","text":"Load spEDM package county-level population density data: Select appropriate embedding dimension E: choose E highest rho lowest MAE RMSE suitable one. selected lib pred, optimal embedding dimension E variable pre 2, variable popdensity, 5. , run GCCM: Visualize result:","code":"library(spEDM)  popd_nb = spdep::read.gal(system.file(\"case/popd_nb.gal\",package = \"spEDM\")) ## Warning in spdep::read.gal(system.file(\"case/popd_nb.gal\", package = \"spEDM\")): ## neighbour object has 4 sub-graphs popd_nb ## Neighbour list object: ## Number of regions: 2806  ## Number of nonzero links: 15942  ## Percentage nonzero weights: 0.2024732  ## Average number of links: 5.681397  ## 4 disjoint connected subgraphs  popd = readr::read_csv(system.file(\"case/popd.csv\",package = \"spEDM\")) ## Rows: 2806 Columns: 7 ## ── Column specification ──────────────────────────────────────────────────────────────────────────── ## Delimiter: \",\" ## dbl (7): x, y, popd, elev, tem, pre, slope ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. popd ## # A tibble: 2,806 × 7 ##        x     y  popd  elev   tem   pre slope ##    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> ##  1  117.  30.5  780.     8  17.4 1528. 0.452 ##  2  117.  30.6  395.    48  17.2 1487. 0.842 ##  3  117.  30.8  261.    49  16.0 1456. 3.56  ##  4  116.  30.1  258.    23  17.4 1555. 0.932 ##  5  116.  30.5  211.   101  16.3 1494. 3.34  ##  6  117.  31.0  386.    10  16.6 1382. 1.65  ##  7  117.  30.2  350.    23  17.5 1569. 0.346 ##  8  117.  30.7  470.    22  17.1 1493. 1.88  ##  9  117.  30.6 1226.    11  17.4 1526. 0.208 ## 10  116.  30.9  137.   598  13.9 1458. 5.92  ## # ℹ 2,796 more rows  popd_sf = sf::st_as_sf(popd, coords = c(\"x\",\"y\"), crs = 4326) popd_sf ## Simple feature collection with 2806 features and 5 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 74.9055 ymin: 18.2698 xmax: 134.269 ymax: 52.9346 ## Geodetic CRS:  WGS 84 ## # A tibble: 2,806 × 6 ##     popd  elev   tem   pre slope          geometry ##  * <dbl> <dbl> <dbl> <dbl> <dbl>       <POINT [°]> ##  1  780.     8  17.4 1528. 0.452 (116.912 30.4879) ##  2  395.    48  17.2 1487. 0.842 (116.755 30.5877) ##  3  261.    49  16.0 1456. 3.56  (116.541 30.7548) ##  4  258.    23  17.4 1555. 0.932  (116.241 30.104) ##  5  211.   101  16.3 1494. 3.34   (116.173 30.495) ##  6  386.    10  16.6 1382. 1.65  (116.935 30.9839) ##  7  350.    23  17.5 1569. 0.346 (116.677 30.2412) ##  8  470.    22  17.1 1493. 1.88  (117.066 30.6514) ##  9 1226.    11  17.4 1526. 0.208 (117.171 30.5558) ## 10  137.   598  13.9 1458. 5.92  (116.208 30.8983) ## # ℹ 2,796 more rows simplex(popd_sf,\"pre\",lib = 1:2000,pred = 2001:nrow(popd_sf),k = 6,nb = popd_nb,trend.rm = TRUE) ## The suggested E and k for variable pre is 2 and 6 simplex(popd_sf,\"popd\",lib = 1:2000,pred = 2001:nrow(popd_sf),k = 6,nb = popd_nb,trend.rm = TRUE) ## The suggested E and k for variable popd is 5 and 6 startTime = Sys.time() pd_res = gccm(data = popd_sf,               cause = \"pre\",               effect = \"popd\",               libsizes = seq(10, 2800, by = 100),               E = c(2,5),               k = 6,               nb = popd_nb,               progressbar = FALSE) endTime = Sys.time() print(difftime(endTime,startTime, units =\"mins\")) ## Time difference of 5.75923 mins pd_res ##    libsizes  pre->popd  popd->pre ## 1        10 0.05589905 0.01004636 ## 2       110 0.18109636 0.03478543 ## 3       210 0.24325566 0.04932428 ## 4       310 0.27657692 0.06417637 ## 5       410 0.30630281 0.07634983 ## 6       510 0.34116169 0.08815848 ## 7       610 0.38078810 0.09890353 ## 8       710 0.41612716 0.10867846 ## 9       810 0.44420437 0.11714337 ## 10      910 0.46815429 0.12485229 ## 11     1010 0.48876449 0.13194552 ## 12     1110 0.50538462 0.13802611 ## 13     1210 0.52300459 0.14335037 ## 14     1310 0.53902632 0.14813342 ## 15     1410 0.55309048 0.15284706 ## 16     1510 0.56754023 0.15777314 ## 17     1610 0.58387624 0.16301596 ## 18     1710 0.60029184 0.16768202 ## 19     1810 0.61631190 0.17202960 ## 20     1910 0.63213899 0.17601166 ## 21     2010 0.64785899 0.17979878 ## 22     2110 0.66289302 0.18304365 ## 23     2210 0.67740971 0.18596497 ## 24     2310 0.69156193 0.18906187 ## 25     2410 0.70541793 0.19196548 ## 26     2510 0.71925253 0.19503355 ## 27     2610 0.73287448 0.19819076 ## 28     2710 0.74435871 0.20116518 plot(pd_res,xlimits = c(0, 2800)) +   ggplot2::theme(legend.justification = c(0.85,1))"},{"path":"https://stscl.github.io/spEDM/articles/GCCM.html","id":"an-example-of-spatial-grid-data","dir":"Articles","previous_headings":"","what":"1.3 An example of spatial grid data","title":"Geographical Convergent Cross Mapping (GCCM)","text":"Load spEDM package farmland NPP data: save computation time, aggregate data 3 times select 1500 non-NA pixels predict: Due high number NA values npp raster data, used non-NA cell libraries testing suitable embedding dimensions. selected lib pred, optimal embedding dimension E variable pre 2, variable npp, 10. , run GCCM: Visualize result:","code":"library(spEDM) npp = terra::rast(system.file(\"case/npp.tif\", package = \"spEDM\")) npp ## class       : SpatRaster  ## dimensions  : 404, 483, 4  (nrow, ncol, nlyr) ## resolution  : 10000, 10000  (x, y) ## extent      : -2625763, 2204237, 1877078, 5917078  (xmin, xmax, ymin, ymax) ## coord. ref. : CGCS2000_Albers  ## source      : npp.tif  ## names       :      npp,        pre,      tem,      elev  ## min values  :   164.00,   384.3409, -47.8194, -122.2004  ## max values  : 16606.33, 23878.3555, 263.6938, 5350.4902  # configure the default colormap in terra options(terra.pal = grDevices::terrain.colors(100,rev = T)) # visualize raster data terra::plot(npp, nc = 2,             axes = FALSE,             legend = FALSE) npp = terra::aggregate(npp, fact = 3, na.rm = TRUE) npp ## class       : SpatRaster  ## dimensions  : 135, 161, 4  (nrow, ncol, nlyr) ## resolution  : 30000, 30000  (x, y) ## extent      : -2625763, 2204237, 1867078, 5917078  (xmin, xmax, ymin, ymax) ## coord. ref. : CGCS2000_Albers  ## source(s)   : memory ## names       :      npp,        pre,      tem,      elev  ## min values  :   187.50,   390.3351, -47.8194, -110.1494  ## max values  : 15381.89, 23734.5330, 262.8576, 5217.6431 terra::global(npp,\"isNA\") ##       isNA ## npp  14815 ## pre  14766 ## tem  14766 ## elev 14760 terra::ncell(npp) ## [1] 21735  nnamat = terra::as.matrix(npp[[1]], wide = TRUE) nnaindice = which(!is.na(nnamat), arr.ind = TRUE) dim(nnaindice) ## [1] 6920    2  set.seed(2025) indices = sample(nrow(nnaindice), size = 1500, replace = FALSE) libindice = nnaindice[-indices,] predindice = nnaindice[indices,] simplex(npp,\"pre\",nnaindice,predindice,k = 8,trend.rm = TRUE) ## The suggested E and k for variable pre is 2 and 8 simplex(npp,\"npp\",nnaindice,predindice,k = 8,trend.rm = TRUE) ## The suggested E and k for variable npp is 10 and 8 startTime = Sys.time() npp_res = gccm(data = npp,                cause = \"pre\",                effect = \"npp\",                libsizes = as.matrix(expand.grid(seq(10,130,10),seq(10,160,10))),                E = c(2,10),                k = 8,                lib = nnaindice,                pred = predindice,                progressbar = FALSE) endTime = Sys.time() print(difftime(endTime,startTime, units =\"mins\")) ## Time difference of 9.433306 mins npp_res ##    libsizes  pre->npp  npp->pre ## 1        10 0.1295281 0.1013898 ## 2        20 0.1990710 0.1605447 ## 3        30 0.2607783 0.2286559 ## 4        40 0.3219650 0.2744616 ## 5        50 0.3788341 0.2956426 ## 6        60 0.4512668 0.3272331 ## 7        70 0.4961658 0.3394660 ## 8        80 0.5366037 0.3378108 ## 9        90 0.5972341 0.3376894 ## 10      100 0.6670024 0.3405838 ## 11      110 0.7358447 0.3412305 ## 12      120 0.7981711 0.3500295 ## 13      130 0.8386849 0.3663077 ## 14      140 0.8460446 0.3687385 ## 15      150 0.8483344 0.3696080 ## 16      160 0.8503816 0.3695784 plot(npp_res,xlimits = c(9, 161),ylimits = c(0.05,1)) +   ggplot2::theme(legend.justification = c(0.25,1))"},{"path":"https://stscl.github.io/spEDM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wenbo Lv. Author, maintainer, copyright holder.","code":""},{"path":"https://stscl.github.io/spEDM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lv W (2025). spEDM: Spatial Empirical Dynamic Modeling. R package version 1.6, https://github.com/stscl/spEDM, https://stscl.github.io/spEDM/.","code":"@Manual{,   title = {spEDM: Spatial Empirical Dynamic Modeling},   author = {Wenbo Lv},   year = {2025},   note = {R package version 1.6, https://github.com/stscl/spEDM},   url = {https://stscl.github.io/spEDM/}, }"},{"path":"https://stscl.github.io/spEDM/index.html","id":"spedm-","dir":"","previous_headings":"","what":"spEDM | Spatial Empirical Dynamic Modeling\n","title":"spEDM | Spatial Empirical Dynamic Modeling\n","text":"Spatial Empirical Dynamic Modeling","code":""},{"path":"https://stscl.github.io/spEDM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"spEDM | Spatial Empirical Dynamic Modeling\n","text":"Install CRAN : Install binary version R-universe : Install source code GitHub :","code":"install.packages(\"spEDM\", dep = TRUE) install.packages(\"spEDM\",                  repos = c(\"https://stscl.r-universe.dev\",                            \"https://cloud.r-project.org\"),                  dep = TRUE) if (!requireNamespace(\"devtools\")) {     install.packages(\"devtools\") } devtools::install_github(\"stscl/spEDM\",                          build_vignettes = TRUE,                          dep = TRUE)"},{"path":"https://stscl.github.io/spEDM/reference/detectThreads.html","id":null,"dir":"Reference","previous_headings":"","what":"detect the number of available threads — detectThreads","title":"detect the number of available threads — detectThreads","text":"detect number available threads","code":""},{"path":"https://stscl.github.io/spEDM/reference/detectThreads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"detect the number of available threads — detectThreads","text":"","code":"detectThreads()"},{"path":"https://stscl.github.io/spEDM/reference/detectThreads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"detect the number of available threads — detectThreads","text":"integer","code":""},{"path":"https://stscl.github.io/spEDM/reference/detectThreads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"detect the number of available threads — detectThreads","text":"","code":"# \\donttest{ detectThreads() #> [1] 4 # }"},{"path":"https://stscl.github.io/spEDM/reference/embedded.html","id":null,"dir":"Reference","previous_headings":"","what":"embedding spatial cross sectional data — embedded","title":"embedding spatial cross sectional data — embedded","text":"embedding spatial cross sectional data","code":""},{"path":"https://stscl.github.io/spEDM/reference/embedded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"embedding spatial cross sectional data — embedded","text":"","code":"# S4 method for class 'sf' embedded(data, target, E = 3, tau = 1, nb = NULL, trend.rm = FALSE)  # S4 method for class 'SpatRaster' embedded(data, target, E = 3, tau = 1, trend.rm = FALSE)"},{"path":"https://stscl.github.io/spEDM/reference/embedded.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"embedding spatial cross sectional data — embedded","text":"data observation data. target Name target variable. E (optional) Dimensions embedding. tau (optional) Step spatial lags. nb (optional) neighbours list. trend.rm (optional) Whether remove linear trend.","code":""},{"path":"https://stscl.github.io/spEDM/reference/embedded.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"embedding spatial cross sectional data — embedded","text":"matrix","code":""},{"path":"https://stscl.github.io/spEDM/reference/embedded.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"embedding spatial cross sectional data — embedded","text":"","code":"columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) v = embedded(columbus,\"crime\") v[1:5,] #>          [,1]     [,2]     [,3] #> [1,] 24.71427 41.55964 43.45135 #> [2,] 26.24684 44.57868 40.73529 #> [3,] 29.41175 43.45135 37.55683 #> [4,] 34.64648 37.95647 38.69064 #> [5,] 40.46533 34.43484 42.28334  cu = terra::rast(system.file(\"case/cu.tif\", package=\"spEDM\")) r = embedded(cu,\"cu\") r[1:5,] #>          [,1]     [,2]     [,3] #> [1,] 14.13616 13.86900 13.60871 #> [2,] 14.09866 13.59174 13.77765 #> [3,] 13.57425 13.91658 14.02535 #> [4,] 13.61885 13.81650 14.26563 #> [5,] 13.82547 13.76455 14.03200"},{"path":"https://stscl.github.io/spEDM/reference/gccm.html","id":null,"dir":"Reference","previous_headings":"","what":"geographical convergent cross mapping — gccm","title":"geographical convergent cross mapping — gccm","text":"geographical convergent cross mapping","code":""},{"path":"https://stscl.github.io/spEDM/reference/gccm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geographical convergent cross mapping — gccm","text":"","code":"# S4 method for class 'sf' gccm(   data,   cause,   effect,   libsizes,   E = 3,   tau = 1,   k = E + 2,   theta = 1,   algorithm = \"simplex\",   lib = NULL,   pred = NULL,   nb = NULL,   threads = detectThreads(),   parallel.level = \"low\",   bidirectional = TRUE,   trend.rm = TRUE,   progressbar = TRUE )  # S4 method for class 'SpatRaster' gccm(   data,   cause,   effect,   libsizes,   E = 3,   tau = 1,   k = E + 2,   theta = 1,   algorithm = \"simplex\",   lib = NULL,   pred = NULL,   threads = detectThreads(),   parallel.level = \"low\",   bidirectional = TRUE,   trend.rm = TRUE,   progressbar = TRUE )"},{"path":"https://stscl.github.io/spEDM/reference/gccm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geographical convergent cross mapping — gccm","text":"data observation data. cause Name causal variable. effect Name effect variable. libsizes vector library sizes use. E (optional) Dimensions embedding. tau (optional) Step spatial lags. k (optional) Number nearest neighbors use prediction. theta (optional) Weighting parameter distances, useful algorithm smap. algorithm (optional) Algorithm used prediction. lib (optional) Libraries indices. pred (optional) Predictions indices. nb (optional) neighbours list. threads (optional) Number threads. parallel.level (optional) Level parallelism, low high. bidirectional (optional) whether identify bidirectional causal associations. trend.rm (optional) Whether remove linear trend. progressbar (optional) whether print progress bar.","code":""},{"path":"https://stscl.github.io/spEDM/reference/gccm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geographical convergent cross mapping — gccm","text":"list xmap cross mapping prediction results varname names causal effect variable bidirectional whether identify bidirectional causal associations","code":""},{"path":"https://stscl.github.io/spEDM/reference/gccm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"geographical convergent cross mapping — gccm","text":"Gao, B., Yang, J., Chen, Z. et al. Causal inference cross-sectional earth system data geographical convergent cross mapping. Nat Commun 14, 5875 (2023).","code":""},{"path":"https://stscl.github.io/spEDM/reference/gccm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"geographical convergent cross mapping — gccm","text":"","code":"columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) # \\donttest{ g = gccm(columbus,\"hoval\",\"crime\",libsizes = seq(5,45,5),E = 6) #>  Computing: [========================================] 100% (done)                          #>  Computing: [========================================] 100% (done)                          g #>   libsizes hoval->crime crime->hoval #> 1        5    0.1301861    0.2642894 #> 2       10    0.1762769    0.3961522 #> 3       15    0.2197481    0.4672470 #> 4       20    0.2324435    0.5144297 #> 5       25    0.2354728    0.5713321 #> 6       30    0.2360934    0.6048914 #> 7       35    0.2412944    0.6253026 #> 8       40    0.2383788    0.6364897 #> 9       45    0.2339483    0.6484721 plot(g, ylimits = c(0,0.85))  # }"},{"path":"https://stscl.github.io/spEDM/reference/multiview.html","id":null,"dir":"Reference","previous_headings":"","what":"multiview embedding forecast — multiview","title":"multiview embedding forecast — multiview","text":"multiview embedding forecast","code":""},{"path":"https://stscl.github.io/spEDM/reference/multiview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multiview embedding forecast — multiview","text":"","code":"# S4 method for class 'sf' multiview(   data,   columns,   target,   nvar,   lib = NULL,   pred = NULL,   E = 3,   tau = 1,   k = E + 2,   nb = NULL,   top = NULL,   threads = detectThreads(),   trend.rm = TRUE )  # S4 method for class 'SpatRaster' multiview(   data,   columns,   target,   nvar,   lib = NULL,   pred = NULL,   E = 3,   tau = 1,   k = E + 2,   top = NULL,   threads = detectThreads(),   trend.rm = TRUE )"},{"path":"https://stscl.github.io/spEDM/reference/multiview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"multiview embedding forecast — multiview","text":"data observation data. columns Names individual variables. target Name target variable. nvar Number variable combinations. lib (optional) Libraries indices. pred (optional) Predictions indices. E (optional) Dimensions embedding. tau (optional) Step spatial lags. k (optional) Number nearest neighbors used prediction. nb (optional) neighbours list. top (optional) Number reconstructions used MVE forecast. threads (optional) Number threads. trend.rm (optional) Whether remove linear trend.","code":""},{"path":"https://stscl.github.io/spEDM/reference/multiview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multiview embedding forecast — multiview","text":"vector (input sf object) matrix","code":""},{"path":"https://stscl.github.io/spEDM/reference/multiview.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"multiview embedding forecast — multiview","text":"Ye H., G. Sugihara, 2016. Information leverage interconnected ecosystems: Overcoming curse dimensionality. Science 353:922-925.","code":""},{"path":"https://stscl.github.io/spEDM/reference/multiview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"multiview embedding forecast — multiview","text":"","code":"columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) # \\donttest{ multiview(columbus,           columns = c(\"inc\",\"crime\",\"open\",\"plumb\",\"discbd\"),           target = \"hoval\", nvar = 3) #>  [1]  18.8646054  22.4869617  21.1550738  -1.1253460  -9.1007114  -2.7903615 #>  [7]  -7.6201012  -6.6613986  -8.7202885  16.2907046 -13.4100870   5.5617166 #> [13]  -4.6242104  -6.0215133 -12.1983725  -9.3303243  14.4441917   2.2055448 #> [19]  -4.3641292  -6.0871013 -11.5193470   2.6235111  13.7585733  -8.7467063 #> [25]  -9.7543853  -4.1516025   3.8137697 -18.6397054 -12.1462767 -12.0658493 #> [31]  10.9218398  19.4799373  -8.1531852  16.5727910   0.7379578   8.5333685 #> [37] -15.5058094 -17.8177107  23.9793164  27.1593848  18.1874514  -2.9723211 #> [43]  -2.8697946  -8.5016198   1.2200571   5.7208429  15.1875343   6.5063233 #> [49]   0.2310141 # }"},{"path":"https://stscl.github.io/spEDM/reference/simplex.html","id":null,"dir":"Reference","previous_headings":"","what":"simplex forecast — simplex","title":"simplex forecast — simplex","text":"simplex forecast","code":""},{"path":"https://stscl.github.io/spEDM/reference/simplex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simplex forecast — simplex","text":"","code":"# S4 method for class 'sf' simplex(   data,   target,   lib = NULL,   pred = NULL,   E = 1:10,   tau = 1,   k = E + 2,   nb = NULL,   threads = detectThreads(),   trend.rm = TRUE )  # S4 method for class 'SpatRaster' simplex(   data,   target,   lib = NULL,   pred = NULL,   E = 1:10,   tau = 1,   k = E + 2,   threads = detectThreads(),   trend.rm = TRUE )"},{"path":"https://stscl.github.io/spEDM/reference/simplex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simplex forecast — simplex","text":"data observation data. target Name target variable. lib (optional) Libraries indices. pred (optional) Predictions indices. E (optional) Dimensions embedding. tau (optional) Step spatial lags. k (optional) Number nearest neighbors used prediction. nb (optional) neighbours list. threads (optional) Number threads. trend.rm (optional) Whether remove linear trend.","code":""},{"path":"https://stscl.github.io/spEDM/reference/simplex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simplex forecast — simplex","text":"list xmap self mapping prediction results varname name target variable","code":""},{"path":"https://stscl.github.io/spEDM/reference/simplex.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"simplex forecast — simplex","text":"Sugihara G. May R. 1990. Nonlinear forecasting way distinguishing chaos measurement error time series. Nature, 344:734-741.","code":""},{"path":"https://stscl.github.io/spEDM/reference/simplex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"simplex forecast — simplex","text":"","code":"columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) # \\donttest{ simplex(columbus,\"crime\") #> The suggested E and k for variable crime is 5 and 8  # }"},{"path":"https://stscl.github.io/spEDM/reference/smap.html","id":null,"dir":"Reference","previous_headings":"","what":"smap forecast — smap","title":"smap forecast — smap","text":"smap forecast","code":""},{"path":"https://stscl.github.io/spEDM/reference/smap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"smap forecast — smap","text":"","code":"# S4 method for class 'sf' smap(   data,   target,   lib = NULL,   pred = NULL,   E = 3,   tau = 1,   k = E + 2,   theta = c(0, 1e-04, 3e-04, 0.001, 0.003, 0.01, 0.03, 0.1, 0.3, 0.5, 0.75, 1, 1.5, 2, 3,     4, 6, 8),   nb = NULL,   threads = detectThreads(),   trend.rm = TRUE )  # S4 method for class 'SpatRaster' smap(   data,   target,   lib = NULL,   pred = NULL,   E = 3,   tau = 1,   k = E + 2,   theta = c(0, 1e-04, 3e-04, 0.001, 0.003, 0.01, 0.03, 0.1, 0.3, 0.5, 0.75, 1, 1.5, 2, 3,     4, 6, 8),   threads = detectThreads(),   trend.rm = TRUE )"},{"path":"https://stscl.github.io/spEDM/reference/smap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"smap forecast — smap","text":"data observation data. target Name target variable. lib (optional) Libraries indices. pred (optional) Predictions indices. E (optional) Dimensions embedding. tau (optional) Step spatial lags. k (optional) Number nearest neighbors used prediction. theta (optional) Weighting parameter distances. nb (optional) neighbours list. threads (optional) Number threads. trend.rm (optional) Whether remove linear trend.","code":""},{"path":"https://stscl.github.io/spEDM/reference/smap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"smap forecast — smap","text":"list xmap self mapping prediction results varname name target variable","code":""},{"path":"https://stscl.github.io/spEDM/reference/smap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"smap forecast — smap","text":"Sugihara G. 1994. Nonlinear forecasting classification natural time series. Philosophical Transactions: Physical Sciences Engineering, 348 (1688):477-495.","code":""},{"path":"https://stscl.github.io/spEDM/reference/smap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"smap forecast — smap","text":"","code":"columbus = sf::read_sf(system.file(\"case/columbus.gpkg\", package=\"spEDM\")) # \\donttest{ smap(columbus,\"inc\") #> The suggested theta for variable inc is 4  # }"},{"path":[]},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"new-1-6","dir":"Changelog","previous_headings":"","what":"new","title":"spEDM 1.6","text":"Add references algorithms spEDM (#367).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"breaking-changes-1-6","dir":"Changelog","previous_headings":"","what":"breaking changes","title":"spEDM 1.6","text":"Refine internal case data (#348).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"spedm-15","dir":"Changelog","previous_headings":"","what":"spEDM 1.5","title":"spEDM 1.5","text":"CRAN release: 2025-03-12","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"new-1-5","dir":"Changelog","previous_headings":"","what":"new","title":"spEDM 1.5","text":"Enable parallel.level parameter specify parallel granularity gccm R API (#310). Implement multiview function multiview embedding forecasting (MVE) method (#221).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"enhancements-1-5","dir":"Changelog","previous_headings":"","what":"enhancements","title":"spEDM 1.5","text":"Integrate lib parameter gccm R API library units selection (#278). Set default k E+2 gccm R API (#261). Eliminate redundant computations source C++ code level (#233). Add trend.rm option R API embedded, simplex, smap methods align gccm behavior (#191). Refactor indexing lag values embedding vector generation spatial lattice (#186,#184) grid data (#183,#181). Centered around example cases gccm vignette (#170).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"breaking-changes-1-5","dir":"Changelog","previous_headings":"","what":"breaking changes","title":"spEDM 1.5","text":"Default plotting method places legend top-left corner plot now (#325). Refine simplex & smap output R side (#263).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"bug-fixes-1-5","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"spEDM 1.5","text":"Fix bug R functions embedded, simplex, smap input data contains one attribute column (#246).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"spedm-14","dir":"Changelog","previous_headings":"","what":"spEDM 1.4","title":"spEDM 1.4","text":"CRAN release: 2025-02-10","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"enhancements-1-4","dir":"Changelog","previous_headings":"","what":"enhancements","title":"spEDM 1.4","text":"Improve default spatial neighbors list generation spatial lattice data support sdsfun package (#159).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"breaking-changes-1-4","dir":"Changelog","previous_headings":"","what":"breaking changes","title":"spEDM 1.4","text":"Adjust behavior tau parameter C++ source code update R side API (#154).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"spedm-13","dir":"Changelog","previous_headings":"","what":"spEDM 1.3","title":"spEDM 1.3","text":"CRAN release: 2025-02-01","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"new-1-3","dir":"Changelog","previous_headings":"","what":"new","title":"spEDM 1.3","text":"Implement smap function enable selection optimal theta parameter (#128). Add simplex function support selecting optimal embedding dimension variables (#98). Provide R-level API generating embeddings (#97).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"enhancements-1-3","dir":"Changelog","previous_headings":"","what":"enhancements","title":"spEDM 1.3","text":"Now bidirectional mapping gccm result uses full join structure organized R side (#118). Support calculating unidirectional mappings gccm function (#117). Relax gccm C++ source code libsizes minimum value constraint E+2 (#109). Provide complete GCCM workflow spatial lattice grid data gccm vignette (#100). Support testing causal links GCCM different E k cause effect variables (#96). Add thread settings gccm (#94). Add S-maps cross-prediction support gccm (#81).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"bug-fixes-1-3","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"spEDM 1.3","text":"Resolve r crash caused invalid E #90 k #89 parameter settings gccm. Fix incorrect Pearson correlation calculation C++ code input contains NA (#83).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"spedm-12","dir":"Changelog","previous_headings":"","what":"spEDM 1.2","title":"spEDM 1.2","text":"CRAN release: 2025-01-14","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"enhancements-1-2","dir":"Changelog","previous_headings":"","what":"enhancements","title":"spEDM 1.2","text":"Encapsulate gccm function using S4 class (#72). Add options tau, k, progressbar gccm (#69). Add print plot s3 methods gccm result (#64).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"bug-fixes-1-2","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"spEDM 1.2","text":"Fix bug gccm function returns empty results input grid data contains NA values (#61).","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"spedm-11","dir":"Changelog","previous_headings":"","what":"spEDM 1.1","title":"spEDM 1.1","text":"CRAN release: 2024-12-19","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"bug-fixes-1-1","dir":"Changelog","previous_headings":"","what":"bug fixes","title":"spEDM 1.1","text":"Resolve CRAN auto check issues, significant API changes.","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"spedm-10","dir":"Changelog","previous_headings":"","what":"spEDM 1.0","title":"spEDM 1.0","text":"CRAN release: 2024-12-16","code":""},{"path":"https://stscl.github.io/spEDM/news/index.html","id":"new-1-0","dir":"Changelog","previous_headings":"","what":"new","title":"spEDM 1.0","text":"Implementing GCCM method spatial lattice grid data using modern C++.","code":""}]
